// Do not edit this file; automatically generated by build.py.
'use strict';

/*

 Visual Blocks Editor

 Copyright 2016 Massachusetts Institute of Technology
 All rights reserved.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/
Blockly.Colours={motion:{primary:"#4C97FF",secondary:"#4280D7",tertiary:"#3373CC"},looks:{primary:"#9966FF",secondary:"#855CD6",tertiary:"#774DCB"},sounds:{primary:"#CF63CF",secondary:"#C94FC9",tertiary:"#BD42BD"},control:{primary:"#FFAB19",secondary:"#EC9C13",tertiary:"#CF8B17"},event:{primary:"#FFBF00",secondary:"#E6AC00",tertiary:"#CC9900"},sensing:{primary:"#5CB1D6",secondary:"#47A8D1",tertiary:"#2E8EB8"},pen:{primary:"#0fBD8C",secondary:"#0DA57A",tertiary:"#0B8E69"},operators:{primary:"#59C059",
secondary:"#46B946",tertiary:"#389438"},data:{primary:"#FF8C1A",secondary:"#FF8000",tertiary:"#DB6E00"},data_lists:{primary:"#FF661A",secondary:"#FF5500",tertiary:"#E64D00"},more:{primary:"#FF6680",secondary:"#FF4D6A",tertiary:"#FF3355"},cMathOperation:{primary:"#EC9C13",secondary:"#EC9C13",tertiary:"#CF8B17"},cVariableOperation:{primary:"#CF63CF",secondary:"#C94FC9",tertiary:"#BD42BD"},cModuleInput:{primary:"#855CD6",secondary:"#855CD6",tertiary:"#774DCB"},cArduinoStatement:{primary:"#4C97FF",secondary:"#4280D7",
tertiary:"#3373CC"},cInstanceStatement:{primary:"#9966FF",secondary:"#855CD6",tertiary:"#774DCB"},cArduinoInput:{primary:"#4280D7",secondary:"#4280D7",tertiary:"#3373CC"},cInstanceDefine:{primary:"#0fBD8C",secondary:"#0DA57A",tertiary:"#0B8E69"},cVariableDefine:{primary:"#59C059",secondary:"#46B946",tertiary:"#389438"},cLoop:{primary:"#FFAB19",secondary:"#EC9C13",tertiary:"#CF8B17"},text:"#575E75",workspace:"#F9F9F9",toolboxHover:"#4C97FF",toolboxSelected:"#005053",toolboxText:"#efefef",toolbox:"#006468",
flyout:"#006468",scrollbar:"#CECDCE",scrollbarHover:"#CECDCE",textField:"#FFFFFF",insertionMarker:"#000000",insertionMarkerOpacity:.2,dragShadowOpacity:.3,stackGlow:"#FFF200",stackGlowOpacity:1,replacementGlow:"#FFFFFF",replacementGlowOpacity:1,colourPickerStroke:"#FFFFFF",fieldShadow:"rgba(0,0,0,0.1)",dropDownShadow:"rgba(0, 0, 0, .3)",numPadBackground:"#547AB2",numPadBorder:"#435F91",numPadActiveBackground:"#435F91",numPadText:"#FFFFFF",valueReportBackground:"#FFFFFF",valueReportBorder:"#AAAAAA"};
Blockly.constants={};Blockly.DRAG_RADIUS=3;Blockly.FLYOUT_DRAG_RADIUS=10;Blockly.SNAP_RADIUS=48;Blockly.CONNECTING_SNAP_RADIUS=68;Blockly.CURRENT_CONNECTION_PREFERENCE=20;Blockly.BUMP_DELAY=0;Blockly.COLLAPSE_CHARS=30;Blockly.LONGPRESS=750;Blockly.SOUND_LIMIT=100;Blockly.DRAG_STACK=!0;Blockly.HSV_SATURATION=.45;Blockly.HSV_VALUE=.65;Blockly.SPRITE={width:96,height:124,url:"sprites.png"};Blockly.SVG_NS="http://www.w3.org/2000/svg";Blockly.HTML_NS="http://www.w3.org/1999/xhtml";
Blockly.INPUT_VALUE=1;Blockly.OUTPUT_VALUE=2;Blockly.NEXT_STATEMENT=3;Blockly.PREVIOUS_STATEMENT=4;Blockly.DUMMY_INPUT=5;Blockly.ALIGN_LEFT=-1;Blockly.ALIGN_CENTRE=0;Blockly.ALIGN_RIGHT=1;Blockly.DRAG_NONE=0;Blockly.DRAG_STICKY=1;Blockly.DRAG_BEGIN=1;Blockly.DRAG_FREE=2;Blockly.OPPOSITE_TYPE=[];Blockly.OPPOSITE_TYPE[Blockly.INPUT_VALUE]=Blockly.OUTPUT_VALUE;Blockly.OPPOSITE_TYPE[Blockly.OUTPUT_VALUE]=Blockly.INPUT_VALUE;Blockly.OPPOSITE_TYPE[Blockly.NEXT_STATEMENT]=Blockly.PREVIOUS_STATEMENT;
Blockly.OPPOSITE_TYPE[Blockly.PREVIOUS_STATEMENT]=Blockly.NEXT_STATEMENT;Blockly.TOOLBOX_AT_TOP=0;Blockly.TOOLBOX_AT_BOTTOM=1;Blockly.TOOLBOX_AT_LEFT=2;Blockly.TOOLBOX_AT_RIGHT=3;Blockly.OUTPUT_SHAPE_HEXAGONAL=1;Blockly.OUTPUT_SHAPE_ROUND=2;Blockly.OUTPUT_SHAPE_SQUARE=3;Blockly.Categories={motion:"motion",looks:"looks",sound:"sounds",pen:"pen",data:"data",dataLists:"data-lists",event:"events",control:"control",sensing:"sensing",operators:"operators",more:"more"};Blockly.DELETE_AREA_NONE=null;
Blockly.DELETE_AREA_TRASH=1;Blockly.DELETE_AREA_TOOLBOX=2;Blockly.VARIABLE_CATEGORY_NAME="VARIABLE";Blockly.PROCEDURE_CATEGORY_NAME="PROCEDURE";Blockly.RENAME_VARIABLE_ID="RENAME_VARIABLE_ID";Blockly.DELETE_VARIABLE_ID="DELETE_VARIABLE_ID";Blockly.NEW_BROADCAST_MESSAGE_ID="NEW_BROADCAST_MESSAGE_ID";Blockly.BROADCAST_MESSAGE_VARIABLE_TYPE="broadcast_msg";Blockly.LIST_VARIABLE_TYPE="list";Blockly.SCALAR_VARIABLE_TYPE="";Blockly.PROCEDURES_DEFINITION_BLOCK_TYPE="procedures_definition";
Blockly.PROCEDURES_PROTOTYPE_BLOCK_TYPE="procedures_prototype";Blockly.PROCEDURES_CALL_BLOCK_TYPE="procedures_call";Blockly.Blocks.ArduinoModules={};
Blockly.Blocks.instance_rgb={init:function(){this.appendDummyInput().appendField(new Blockly.FieldImage("blockIcon/rgb.png",40,40,"*")).appendField("RGB Module:").appendField(new Blockly.FieldInstanceInput("RGB","rgb1","rgb"),"NAME");this.appendValueInput("R").setCheck("Pin").setAlign(Blockly.ALIGN_RIGHT).appendField("R=");this.appendValueInput("G").setCheck("Pin").setAlign(Blockly.ALIGN_RIGHT).appendField("G=");this.appendValueInput("B").setCheck("Pin").setAlign(Blockly.ALIGN_RIGHT).appendField("B=");this.setColour(Blockly.Colours.cInstanceDefine.primary,
Blockly.Colours.cInstanceDefine.secondary,Blockly.Colours.cInstanceDefine.tertiary);this.setTooltip("");this.setHelpUrl("");this.setInputsInline(!1)},provideBlocks:["module_set_rgb","rgbtocolor"]};
Blockly.Blocks.module_set_rgb={init:function(){this.appendDummyInput().appendField("set").appendField(new Blockly.FieldInstanceDropdown("RGB"),"rgb").appendField("=");this.appendValueInput("colour").setCheck("Colour");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cInstanceStatement.primary,Blockly.Colours.cInstanceStatement.secondary,Blockly.Colours.cInstanceStatement.tertiary);this.setTooltip("CLICK A COLOR TO CHANGE RGB LED COLOR");
this.setHelpUrl("")}};
Blockly.Blocks.rgbtocolor={init:function(){this.appendValueInput("r").setCheck(null).appendField("R");this.appendValueInput("g").setCheck(null).appendField("G");this.appendValueInput("b").setCheck(null).appendField("B");this.setInputsInline(!0);this.setOutput(!0,"Colour");this.setColour(Blockly.Colours.cModuleInput.secondary,Blockly.Colours.cModuleInput.secondary,Blockly.Colours.cModuleInput.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);this.setTooltip("CHOOSE INDIVIDUAL (RED, GREEN, BLUE)RGB LED LEADS ");this.setHelpUrl("")}};
Blockly.Blocks.instance_led={init:function(){this.appendDummyInput().appendField(new Blockly.FieldImage("blockIcon/led.png",40,40,"*")).appendField(new Blockly.FieldInstanceInput("LED","led1","led"),"NAME").appendField("on Pin");this.appendValueInput("Pin").setCheck("Pin");this.setInputsInline(!0);this.setColour(Blockly.Colours.cInstanceDefine.primary,Blockly.Colours.cInstanceDefine.secondary,Blockly.Colours.cInstanceDefine.tertiary);this.setTooltip("The LED module allows easy plug and play configuration to your Arduino's I/O lines. The LED can be controlled through a PWM signal or a digital high/ low output");
this.setHelpUrl("https://osepp.com/electronic-modules/sensor-modules/68-led-modules")},provideBlocks:["module_set_led"]};
Blockly.Blocks.module_set_led={init:function(){this.appendDummyInput().appendField("set").appendField(new Blockly.FieldInstanceDropdown("LED"),"NAME");this.appendValueInput("state").setCheck(["Boolean","Number"]);this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cInstanceStatement.primary,Blockly.Colours.cInstanceStatement.secondary,Blockly.Colours.cInstanceStatement.tertiary);this.setTooltip("SET AN LED HIGH OR LOW (ON OR OFF)");
this.setHelpUrl("https://osepp.com/electronic-modules/sensor-modules/68-led-modules")}};
Blockly.Blocks.instance_button={init:function(){this.appendDummyInput().appendField(new Blockly.FieldImage("blockIcon/button.png",40,40,"*")).appendField(new Blockly.FieldInstanceInput("BUTTON","button1","button"),"NAME").appendField("on Pin");this.appendValueInput("Pin").setCheck("Pin");this.setInputsInline(!0);this.setColour(Blockly.Colours.cInstanceDefine.primary,Blockly.Colours.cInstanceDefine.secondary,Blockly.Colours.cInstanceDefine.tertiary);this.setTooltip("The push button module allows detection in states of high or low from the onboard momentary push button.");
this.setHelpUrl("https://osepp.com/electronic-modules/sensor-modules/76-push-button-module")},provideBlocks:["module_read_button"]};
Blockly.Blocks.module_read_button={init:function(){this.appendDummyInput().appendField(new Blockly.FieldInstanceDropdown("BUTTON"),"NAME").appendField("Pressed");this.setInputsInline(!0);this.setOutput(!0,"Boolean");this.setColour(Blockly.Colours.cModuleInput.primary,Blockly.Colours.cModuleInput.secondary,Blockly.Colours.cModuleInput.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_HEXAGONAL);this.setTooltip("DETECT IF BUTTON IS PRESSED");this.setHelpUrl("https://osepp.com/electronic-modules/sensor-modules/76-push-button-module")}};
Blockly.Blocks.instance_lcd1602={init:function(){this.appendDummyInput().appendField(new Blockly.FieldImage("blockIcon/1602lcd.svg",40,40,"*")).appendField("Lcd1602 ").appendField(new Blockly.FieldInstanceInput("LCD1602","lcd1","lcd"),"NAME");this.appendValueInput("RS").setCheck("Pin").setAlign(Blockly.ALIGN_RIGHT).appendField("RS Pin");this.appendValueInput("EN").setCheck("Pin").setAlign(Blockly.ALIGN_RIGHT).appendField("EN Pin");this.appendValueInput("D4").setCheck("Pin").setAlign(Blockly.ALIGN_RIGHT).appendField("D4 Pin");
this.appendValueInput("D5").setCheck("Pin").setAlign(Blockly.ALIGN_RIGHT).appendField("D5 Pin");this.appendValueInput("D6").setCheck("Pin").setAlign(Blockly.ALIGN_RIGHT).appendField("D6 Pin");this.appendValueInput("D7").setCheck("Pin").setAlign(Blockly.ALIGN_RIGHT).appendField("D7 Pin");this.setInputsInline(!1);this.setColour(Blockly.Colours.cInstanceDefine.primary,Blockly.Colours.cInstanceDefine.secondary,Blockly.Colours.cInstanceDefine.tertiary);this.setTooltip("The LCD display is a 16 character by 2 line (16*2) LCD display");
this.setHelpUrl("https://osepp.com/electronic-modules/breakout-boards/13-16-2-lcd-display")},provideBlocks:["module_lcd_print","module_lcd_clear","module_lcd_goto"]};
Blockly.Blocks.module_lcd_print={init:function(){this.appendValueInput("value").setCheck(["String","Number"]).appendField(new Blockly.FieldInstanceDropdown("LCD1602"),"NAME").appendField("print");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cInstanceStatement.primary,Blockly.Colours.cInstanceStatement.secondary,Blockly.Colours.cInstanceStatement.tertiary);this.setTooltip("DISPLAYS TO THE LCD DISPLAY");this.setHelpUrl("https://www.arduino.cc/en/Reference/LiquidCrystalPrint")}};
Blockly.Blocks.module_lcd_clear={init:function(){this.appendDummyInput().appendField(new Blockly.FieldInstanceDropdown("LCD1602"),"NAME").appendField("clear");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cInstanceStatement.primary,Blockly.Colours.cInstanceStatement.secondary,Blockly.Colours.cInstanceStatement.tertiary);this.setTooltip("REFRESH (CLEAR) THE LCD DISPLAY");this.setHelpUrl("https://www.arduino.cc/en/Reference/LiquidCrystalClear")}};
Blockly.Blocks.module_lcd_goto={init:function(){this.appendDummyInput().appendField(new Blockly.FieldInstanceDropdown("LCD1602"),"NAME").appendField("Goto");this.appendValueInput("column").setCheck("Number").appendField("X");this.appendValueInput("line").setCheck("Number").appendField("Y");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cInstanceStatement.primary,Blockly.Colours.cInstanceStatement.secondary,Blockly.Colours.cInstanceStatement.tertiary);
this.setTooltip("SET THE ROW AND COLUMN OF THE LCD DISPLAY");this.setHelpUrl("https://www.arduino.cc/en/Reference/LiquidCrystalSetCursor")}};
Blockly.Blocks.instance_buzzer={init:function(){this.appendDummyInput().appendField(new Blockly.FieldImage("blockIcon/buzzer.png",40,40,"*")).appendField(new Blockly.FieldInstanceInput("BUZZER","buzzer1","buzzer"),"NAME").appendField("on Pin");this.appendValueInput("Pin").setCheck("Pin");this.setInputsInline(!0);this.setColour(Blockly.Colours.cInstanceDefine.primary,Blockly.Colours.cInstanceDefine.secondary,Blockly.Colours.cInstanceDefine.tertiary);this.setTooltip("The Piezo sensor acts both as an output buzzer device and an input device measuring sound pressure.");
this.setHelpUrl("https://osepp.com/electronic-modules/sensor-modules/72-piezo-sensor-module")},provideBlocks:["module_set_buzzer"]};
Blockly.Blocks.module_set_buzzer={init:function(){this.appendDummyInput().appendField("set").appendField(new Blockly.FieldInstanceDropdown("BUZZER"),"NAME");this.appendValueInput("state").setCheck(["Boolean","Number"]);this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cInstanceStatement.primary,Blockly.Colours.cInstanceStatement.secondary,Blockly.Colours.cInstanceStatement.tertiary);this.setTooltip("TURN THE BUZZER HIGH OR LOW (ON OR OFF)");
this.setHelpUrl("https://osepp.com/electronic-modules/sensor-modules/72-piezo-sensor-module")}};
Blockly.Blocks.instance_speaker={init:function(){this.appendDummyInput().appendField(new Blockly.FieldImage("blockIcon/speaker.svg",40,40,"*")).appendField(new Blockly.FieldInstanceInput("SPEAKER","speaker1","speaker"),"NAME").appendField("on Pin");this.appendValueInput("Pin").setCheck("Pin");this.setInputsInline(!0);this.setColour(Blockly.Colours.cInstanceDefine.primary,Blockly.Colours.cInstanceDefine.secondary,Blockly.Colours.cInstanceDefine.tertiary);this.setTooltip("");this.setHelpUrl("")},provideBlocks:["module_buzzer_playtone",
"module_buzzer_notone"]};
Blockly.Blocks.module_buzzer_playtone={init:function(){this.appendValueInput("frequency").setCheck("Number").appendField(new Blockly.FieldInstanceDropdown("SPEAKER"),"NAME").appendField("play");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cInstanceStatement.primary,Blockly.Colours.cInstanceStatement.secondary,Blockly.Colours.cInstanceStatement.tertiary);this.setTooltip("PLAY A NOTE FROM THE SPEAKER");this.setHelpUrl("https://www.arduino.cc/en/Reference/Tone")}};
Blockly.Blocks.module_buzzer_notone={init:function(){this.appendDummyInput().appendField(new Blockly.FieldInstanceDropdown("SPEAKER"),"NAME").appendField("stop");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cInstanceStatement.primary,Blockly.Colours.cInstanceStatement.secondary,Blockly.Colours.cInstanceStatement.tertiary);this.setTooltip("STOP THE SPEAKER");this.setHelpUrl("https://www.arduino.cc/en/Reference/NoTone")}};
Blockly.Blocks.instance_fanmotor={init:function(){this.appendDummyInput().appendField(new Blockly.FieldImage("blockIcon/fanmotor.png",40,40,"*")).appendField("Fan Motor").appendField(new Blockly.FieldInstanceInput("FANMOTOR","fan1","fan"),"NAME");this.appendValueInput("INA").setCheck("Pin").setAlign(Blockly.ALIGN_RIGHT).appendField("INA");this.appendValueInput("INB").setCheck("Pin").setAlign(Blockly.ALIGN_RIGHT).appendField("INB");this.setInputsInline(!1);this.setColour(Blockly.Colours.cInstanceDefine.primary,
Blockly.Colours.cInstanceDefine.secondary,Blockly.Colours.cInstanceDefine.tertiary);this.setTooltip("The fan motor controller board allows speed and direction control of a low power DC motor.");this.setHelpUrl("https://osepp.com/electronic-modules/sensor-modules/59-fan-motor-module")},provideBlocks:["module_set_fanmotor"]};
Blockly.Blocks.module_set_fanmotor={init:function(){var a=new Blockly.FieldDropdown([["forward","f"],["backward","b"],["stop","s"]],function(a){this.sourceBlock_.updateStepShape(a)});this.appendDummyInput().appendField(new Blockly.FieldInstanceDropdown("FANMOTOR"),"NAME").appendField(" ").appendField(a,"dir");this.appendValueInput("pwm").setCheck("Number");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cInstanceStatement.primary,
Blockly.Colours.cInstanceStatement.secondary,Blockly.Colours.cInstanceStatement.tertiary);this.setTooltip("CHOOSE THE SPEED AND DIRECTION OF FAN MOTOR");this.setHelpUrl("https://osepp.com/electronic-modules/sensor-modules/59-fan-motor-module")},afterCreateBeforRender:function(){this.updateStepShape(this.getFieldValue("dir"))},updateStepShape:function(a){var b=this.getInput("pwm"),c=!b.hide;a="s"==a?!1:!0;c!=a&&(b.setVisible(a),b.hide=!a,a&&(b=b.connection.targetBlock())&&b.render(!1))}};
Blockly.Blocks.instance_servo={init:function(){this.appendDummyInput().appendField(new Blockly.FieldImage("blockIcon/servo.png",40,40,"*")).appendField(new Blockly.FieldInstanceInput("SERVO","servo1","servo"),"NAME");this.appendValueInput("Pin").setCheck("Pin").appendField("on Pin");this.setInputsInline(!0);this.setColour(Blockly.Colours.cInstanceDefine.primary,Blockly.Colours.cInstanceDefine.secondary,Blockly.Colours.cInstanceDefine.tertiary);this.setTooltip("ervos have integrated gears and a shaft that can be precisely controlled. Standard servos allow the shaft to be positioned at various angles, usually between 0 and 180 degrees");
this.setHelpUrl("https://www.arduino.cc/en/Reference/Servo")},provideBlocks:["module_servo_write"]};function randomAngle(){return parseInt(180*Math.random())}Blockly.Blocks.angle_picker={init:function(){this.appendDummyInput().setAlign(Blockly.ALIGN_CENTRE).appendField(new Blockly.FieldAngle(randomAngle()),"ANGLE");this.setInputsInline(!0);this.setOutput(!0,"Number");this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);this.setColour(Blockly.Colours.textField)}};
Blockly.Blocks.module_servo_write={init:function(){this.appendDummyInput().appendField(new Blockly.FieldInstanceDropdown("SERVO"),"NAME");this.appendValueInput("angle").setCheck("Number").appendField("write");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cInstanceStatement.primary,Blockly.Colours.cInstanceStatement.secondary,Blockly.Colours.cInstanceStatement.tertiary);this.setTooltip("WRITE A SPECIFIC ANGLE FOR THE SERVO MOTOR");
this.setHelpUrl("https://www.arduino.cc/en/Reference/ServoWrite")}};
Blockly.Blocks.instance_stepper={init:function(){this.appendDummyInput().appendField(new Blockly.FieldImage("blockIcon/stepper.png",40,40,"*")).appendField("Stepper Motor").appendField(new Blockly.FieldInstanceInput("STEPPER","stepper1","stepper"),"NAME");var a=new Blockly.FieldDropdown([["FourPin","F"],["TwoPin","T"]],function(a){this.sourceBlock_.updateShape(a)});this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField("Pin Number").appendField(a,"pinNumber");this.appendValueInput("Pin1").setCheck("Pin").setAlign(Blockly.ALIGN_RIGHT).appendField("INA");
this.appendValueInput("Pin2").setCheck("Pin").setAlign(Blockly.ALIGN_RIGHT).appendField("INB");this.appendValueInput("Pin3").setCheck("Pin").setAlign(Blockly.ALIGN_RIGHT).appendField("INC");this.appendValueInput("Pin4").setCheck("Pin").setAlign(Blockly.ALIGN_RIGHT).appendField("IND");this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField("Steps per revolution").appendField(new Blockly.FieldNumber(0,1,Infinity,1),"spv");this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField("speed(rpm)").appendField(new Blockly.FieldNumber(0,
1,Infinity,1),"rpm");this.setInputsInline(!1);this.setColour(Blockly.Colours.cInstanceDefine.primary,Blockly.Colours.cInstanceDefine.secondary,Blockly.Colours.cInstanceDefine.tertiary);this.setTooltip("");this.setHelpUrl("https://www.arduino.cc/en/Reference/Stepper")},afterCreateBeforRender:function(){this.updateShape(this.getFieldValue("pinNumber"))},updateShape:function(a){var b=this.getInput("Pin3"),c=b.isVisible();a="T"==a?!1:!0;c!=a&&(c=function(a,b){a.setVisible(b);a.hide=!b;var c=a.connection.targetBlock();
c&&(b?c.render(!1):c.isShadow()?c.getField("Pin").setValue("select pin"):c.unplug())},c(b,a),c(this.getInput("Pin4"),a))},provideBlocks:["module_stepper_move","module_stepper_speed"]};
Blockly.Blocks.module_stepper_move={init:function(){this.appendDummyInput().appendField(new Blockly.FieldInstanceDropdown("STEPPER"),"NAME");this.appendValueInput("step").setCheck("Number").appendField("step");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cInstanceStatement.primary,Blockly.Colours.cInstanceStatement.secondary,Blockly.Colours.cInstanceStatement.tertiary);this.setTooltip("INPUT THE STEPPER MOTORS STEP AMOUNT");
this.setHelpUrl("https://www.arduino.cc/en/Reference/StepperStep")}};
Blockly.Blocks.module_stepper_speed={init:function(){this.appendDummyInput().appendField(new Blockly.FieldInstanceDropdown("STEPPER"),"NAME");this.appendValueInput("speed").setCheck("Number").appendField("setSpeed");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cInstanceStatement.primary,Blockly.Colours.cInstanceStatement.secondary,Blockly.Colours.cInstanceStatement.tertiary);this.setTooltip("SET THE SPEED OF THE STEPPER MOTOR");
this.setHelpUrl("https://www.arduino.cc/en/Reference/StepperSetSpeed")}};
Blockly.Blocks.instance_pir={init:function(){this.appendDummyInput().appendField(new Blockly.FieldImage("blockIcon/pir.png",40,40,"*")).appendField(new Blockly.FieldInstanceInput("PIR","pir1","pir"),"NAME");this.appendValueInput("Pin").setCheck("Pin").appendField("on Pin");this.setInputsInline(!0);this.setColour(Blockly.Colours.cInstanceDefine.primary,Blockly.Colours.cInstanceDefine.secondary,Blockly.Colours.cInstanceDefine.tertiary);this.setTooltip("The Passive Infrared sensor detects changes in motion within its environmen");
this.setHelpUrl("https://osepp.com/electronic-modules/sensor-modules/73-passive-infrared-sensor-pir-module")},provideBlocks:["module_pir_get"]};
Blockly.Blocks.module_pir_get={init:function(){this.appendDummyInput().appendField(new Blockly.FieldInstanceDropdown("PIR"),"NAME").appendField("Trigged");this.setInputsInline(!0);this.setOutput(!0,"Boolean");this.setColour(Blockly.Colours.cModuleInput.primary,Blockly.Colours.cModuleInput.secondary,Blockly.Colours.cModuleInput.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_HEXAGONAL);this.setTooltip("DETECT IF THE PIR SENSOR WAS TRIGGERED");this.setHelpUrl("https://osepp.com/electronic-modules/sensor-modules/73-passive-infrared-sensor-pir-module")}};
Blockly.Blocks.instance_potentiometer={init:function(){this.appendDummyInput().appendField(new Blockly.FieldImage("blockIcon/potentiometer.png",40,40,"*")).appendField(new Blockly.FieldInstanceInput("POTENTIOMETER","potentiometer","potentiometer"),"NAME");this.appendValueInput("Pin").setCheck("Pin").appendField("on Pin");this.setInputsInline(!0);this.setColour(Blockly.Colours.cInstanceDefine.primary,Blockly.Colours.cInstanceDefine.secondary,Blockly.Colours.cInstanceDefine.tertiary);this.setTooltip("The potentiometer module is able to adjust and read variations in voltage.");
this.setHelpUrl("https://osepp.com/electronic-modules/sensor-modules/74-potentiometer-module")},provideBlocks:["module_potentiometer_get"]};
Blockly.Blocks.module_potentiometer_get={init:function(){this.appendDummyInput().appendField(new Blockly.FieldInstanceDropdown("POTENTIOMETER"),"NAME").appendField("value");this.setInputsInline(!0);this.setOutput(!0,"Number");this.setColour(Blockly.Colours.cModuleInput.primary,Blockly.Colours.cModuleInput.secondary,Blockly.Colours.cModuleInput.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);this.setTooltip("READ THE KNOB (POTENTIOMETER) VALUE(0-1023)");this.setHelpUrl("https://osepp.com/electronic-modules/sensor-modules/74-potentiometer-module")}};
Blockly.Blocks.instance_slider={init:function(){this.appendDummyInput().appendField(new Blockly.FieldImage("blockIcon/slider.png",40,40,"*")).appendField(new Blockly.FieldInstanceInput("SLIDER","slider","slider"),"NAME");this.appendValueInput("Pin").setCheck("Pin").appendField("on Pin");this.setInputsInline(!0);this.setColour(Blockly.Colours.cInstanceDefine.primary,Blockly.Colours.cInstanceDefine.secondary,Blockly.Colours.cInstanceDefine.tertiary);this.setTooltip("");this.setHelpUrl("")},provideBlocks:["module_slider_get"]};
Blockly.Blocks.module_slider_get={init:function(){this.appendDummyInput().appendField(new Blockly.FieldInstanceDropdown("SLIDER"),"NAME").appendField("value");this.setInputsInline(!0);this.setOutput(!0,"Number");this.setColour(Blockly.Colours.cModuleInput.primary,Blockly.Colours.cModuleInput.secondary,Blockly.Colours.cModuleInput.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);this.setTooltip("READ THE SLIDER VALUE(0-1023)");this.setHelpUrl("")}};
Blockly.Blocks.instance_lightsensor={init:function(){this.appendDummyInput().appendField(new Blockly.FieldImage("blockIcon/lightsensor.png",40,40,"*")).appendField(new Blockly.FieldInstanceInput("LIGHTSENSOR","light1","light"),"NAME");this.appendValueInput("Pin").setCheck("Pin").appendField("on Pin");this.setInputsInline(!0);this.setColour(Blockly.Colours.cInstanceDefine.primary,Blockly.Colours.cInstanceDefine.secondary,Blockly.Colours.cInstanceDefine.tertiary);this.setTooltip("");this.setHelpUrl("")},
provideBlocks:["module_lightsensor_get"]};
Blockly.Blocks.module_lightsensor_get={init:function(){this.appendDummyInput().appendField(new Blockly.FieldInstanceDropdown("LIGHTSENSOR"),"NAME").appendField("value");this.setInputsInline(!0);this.setOutput(!0,"Number");this.setColour(Blockly.Colours.cModuleInput.primary,Blockly.Colours.cModuleInput.secondary,Blockly.Colours.cModuleInput.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);this.setTooltip("READ THE LIGHT VALUE(0-1023) FROM THE LIGHT SENSOR");this.setHelpUrl("")}};
Blockly.Blocks.instance_lm35={init:function(){this.appendDummyInput().appendField(new Blockly.FieldImage("blockIcon/temperaturesensor.png",40,40,"*")).appendField(new Blockly.FieldInstanceInput("LM35","lm35_1","lm35_"),"NAME");this.appendValueInput("Pin").setCheck("Pin").appendField("on Pin");this.setInputsInline(!0);this.setColour(Blockly.Colours.cInstanceDefine.primary,Blockly.Colours.cInstanceDefine.secondary,Blockly.Colours.cInstanceDefine.tertiary);this.setTooltip("LM35 Temperature sensor uses the LM35 integrated circuit. Can be used in numerous weather detection applications for home automation / weather monitoring.");
this.setHelpUrl("https://osepp.com/electronic-modules/sensor-modules/79-lm35-temperature-sensor-module")},provideBlocks:["module_lm35_get"]};
Blockly.Blocks.module_lm35_get={init:function(){this.appendDummyInput().appendField(new Blockly.FieldInstanceDropdown("LM35"),"NAME").appendField("Celsius");this.setInputsInline(!0);this.setOutput(!0,"Number");this.setColour(Blockly.Colours.cModuleInput.primary,Blockly.Colours.cModuleInput.secondary,Blockly.Colours.cModuleInput.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);this.setTooltip("READ THE TEMPERATURE IN CELSIUS FROM THE TEMPERATURE SENSOR");this.setHelpUrl("https://osepp.com/electronic-modules/sensor-modules/79-lm35-temperature-sensor-module")}};
Blockly.Blocks.instance_soundsensor={init:function(){this.appendDummyInput().appendField(new Blockly.FieldImage("blockIcon/soundsensor.png",40,40,"*")).appendField(new Blockly.FieldInstanceInput("SOUNDSENSOR","soundSensor","soundSensor"),"NAME");this.appendValueInput("Pin").setCheck("Pin").appendField("on Pin");this.setInputsInline(!0);this.setColour(Blockly.Colours.cInstanceDefine.primary,Blockly.Colours.cInstanceDefine.secondary,Blockly.Colours.cInstanceDefine.tertiary);this.setTooltip("The sound sensor is the perfect sensor to detect environmental variations in noise.");
this.setHelpUrl("https://osepp.com/electronic-modules/sensor-modules/78-sound-sensor-module")},provideBlocks:["module_soundsensor_get"]};
Blockly.Blocks.module_soundsensor_get={init:function(){this.appendDummyInput().appendField(new Blockly.FieldInstanceDropdown("SOUNDSENSOR"),"NAME").appendField("value");this.setInputsInline(!0);this.setOutput(!0,"Number");this.setColour(Blockly.Colours.cModuleInput.primary,Blockly.Colours.cModuleInput.secondary,Blockly.Colours.cModuleInput.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);this.setTooltip("READ THE SOUND VOLUME(0-1023) FROM THE SOUND SENSOR");this.setHelpUrl("https://osepp.com/electronic-modules/sensor-modules/78-sound-sensor-module")}};
Blockly.Blocks.instance_ultrasonic={init:function(){this.appendDummyInput().appendField(new Blockly.FieldImage("blockIcon/ultrasonic.png",40,40,"*")).appendField(new Blockly.FieldInstanceInput("ULTRASONIC","ultrasonic","ultrasonic"),"NAME");this.appendValueInput("trigPin").setCheck("Pin").setAlign(Blockly.ALIGN_RIGHT).appendField("trig pin");this.appendValueInput("echoPin").setCheck("Pin").setAlign(Blockly.ALIGN_RIGHT).appendField("echo pin");this.setInputsInline(!1);this.setColour(Blockly.Colours.cInstanceDefine.primary,
Blockly.Colours.cInstanceDefine.secondary,Blockly.Colours.cInstanceDefine.tertiary);this.setTooltip("An ultrasonic transmitter and receiver sensor all in one.");this.setHelpUrl("https://osepp.com/electronic-modules/sensor-modules/62-osepp-ultrasonic-sensor-module")},provideBlocks:["module_ultrasonic_get"]};
Blockly.Blocks.module_ultrasonic_get={init:function(){this.appendDummyInput().appendField("mm of").appendField(new Blockly.FieldInstanceDropdown("ULTRASONIC"),"NAME");this.setInputsInline(!0);this.setOutput(!0,"Number");this.setColour(Blockly.Colours.cModuleInput.primary,Blockly.Colours.cModuleInput.secondary,Blockly.Colours.cModuleInput.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);this.setTooltip("READ THE DISTANCE IN MILLIMETERS OF THE ULTRASONIC SENSOR");this.setHelpUrl("https://osepp.com/electronic-modules/sensor-modules/62-osepp-ultrasonic-sensor-module")}};
Blockly.Blocks.instance_4dtouch={init:function(){this.appendDummyInput().appendField(new Blockly.FieldImage("https://osepp.com/images/igallery/resized/1-100/LS00010_web-81-300-225-80.jpg",40,40,"*")).appendField(new Blockly.FieldInstanceInput("TOUCH4D","TOUCH4D_","TOUCH4D_"),"NAME");this.appendValueInput("OUT1").setCheck("Pin").setAlign(Blockly.ALIGN_RIGHT).appendField("OUT1");this.appendValueInput("OUT2").setCheck("Pin").setAlign(Blockly.ALIGN_RIGHT).appendField("OUT2");this.appendValueInput("OUT3").setCheck("Pin").setAlign(Blockly.ALIGN_RIGHT).appendField("OUT3");
this.appendValueInput("OUT4").setCheck("Pin").setAlign(Blockly.ALIGN_RIGHT).appendField("OUT4");this.setInputsInline(!1);this.setColour(Blockly.Colours.cInstanceDefine.primary,Blockly.Colours.cInstanceDefine.secondary,Blockly.Colours.cInstanceDefine.tertiary);this.setTooltip("Capacitive touch Module");this.setHelpUrl("https://osepp.com/electronic-modules/sensor-modules/53-4-digit-touch-sensor-module")},provideBlocks:["module_4dtouch_get"]};
Blockly.Blocks.module_4dtouch_get={init:function(){this.appendDummyInput().appendField(new Blockly.FieldInstanceDropdown("TOUCH4D"),"NAME").appendField(" ");this.appendDummyInput().appendField(new Blockly.FieldDropdown([["OUT1","OUT1"],["OUT2","OUT2"],["OUT3","OUT3"],["OUT4","OUT4"]]),"CHANNEL").appendField("Pressed");this.setInputsInline(!0);this.setOutput(!0,"Boolean");this.setColour(Blockly.Colours.cModuleInput.primary,Blockly.Colours.cModuleInput.secondary,Blockly.Colours.cModuleInput.tertiary);
this.setOutputShape(Blockly.OUTPUT_SHAPE_HEXAGONAL);this.setTooltip("DETECT IF TOUCH SENSOR IS PRESSED");this.setHelpUrl("https://osepp.com/electronic-modules/sensor-modules/53-4-digit-touch-sensor-module")}};
Blockly.Blocks.instance_flame={init:function(){this.appendDummyInput().appendField(new Blockly.FieldImage("https://osepp.com/images/igallery/resized/1-100/Flame_Sensor_Module-92-800-600-80.jpg",40,40,"*")).appendField(new Blockly.FieldInstanceInput("FLAME","Flame1","Flame"),"NAME").appendField("on Pin");this.appendValueInput("Pin").setCheck("Pin");this.setInputsInline(!0);this.setColour(Blockly.Colours.cInstanceDefine.primary,Blockly.Colours.cInstanceDefine.secondary,Blockly.Colours.cInstanceDefine.tertiary);
this.setTooltip("detect variations in light wavelength (such as fire flame detection) in the range of 760nm-1100 nm");this.setHelpUrl("https://osepp.com/electronic-modules/sensor-modules/60-flame-sensor-module")},provideBlocks:["module_read_flame"]};
Blockly.Blocks.module_read_flame={init:function(){this.appendDummyInput().appendField(new Blockly.FieldInstanceDropdown("FLAME"),"NAME").appendField("Value");this.setInputsInline(!0);this.setOutput(!0,"Number");this.setColour(Blockly.Colours.cModuleInput.primary,Blockly.Colours.cModuleInput.secondary,Blockly.Colours.cModuleInput.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);this.setTooltip("DETECT VALUE OF FLAME SENSOR");this.setHelpUrl("https://osepp.com/electronic-modules/sensor-modules/60-flame-sensor-module")}};
Blockly.Blocks.instance_irdetector={init:function(){this.appendDummyInput().appendField(new Blockly.FieldImage("https://osepp.com/images/igallery/resized/101-200/IR_DETECTOR_IRDET_01-101-300-225-80.jpg",40,40,"*")).appendField(new Blockly.FieldInstanceInput("IRDETECTOR","detector1","detector"),"NAME").appendField("on Pin");this.appendValueInput("Pin").setCheck("Pin");this.setInputsInline(!0);this.setColour(Blockly.Colours.cInstanceDefine.primary,Blockly.Colours.cInstanceDefine.secondary,Blockly.Colours.cInstanceDefine.tertiary);
this.setTooltip("Obstacle avoidance module");this.setHelpUrl("https://osepp.com/electronic-modules/sensor-modules/64-ir-detector")},provideBlocks:["module_read_irdetector"]};
Blockly.Blocks.module_read_irdetector={init:function(){this.appendDummyInput().appendField(new Blockly.FieldInstanceDropdown("IRDETECTOR"),"NAME").appendField("Trigged");this.setInputsInline(!0);this.setOutput(!0,"Boolean");this.setColour(Blockly.Colours.cModuleInput.primary,Blockly.Colours.cModuleInput.secondary,Blockly.Colours.cModuleInput.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_HEXAGONAL);this.setTooltip("Detects when objects are within the calibrated range");this.setHelpUrl("https://osepp.com/electronic-modules/sensor-modules/64-ir-detector")}};
Blockly.Blocks.instance_TB6612MotorDriver={init:function(){this.appendDummyInput().appendField(new Blockly.FieldImage("blockIcon/tb6612motordriver.png",40,40,"*")).appendField(new Blockly.FieldInstanceInput("TB6612MotorDriver","Motor","Motor"),"NAME");this.appendValueInput("DIR").setCheck("Pin").setAlign(Blockly.ALIGN_RIGHT).appendField(new Blockly.FieldDropdown([["Forward","f"],["Backward","b"]]),"frb").appendField("DIR");this.appendValueInput("PWM").setCheck("Pin").setAlign(Blockly.ALIGN_RIGHT).appendField("PWM");
this.setInputsInline(!1);this.setColour(Blockly.Colours.cInstanceDefine.primary,Blockly.Colours.cInstanceDefine.secondary,Blockly.Colours.cInstanceDefine.tertiary);this.setTooltip("Capacitive touch Module")},provideBlocks:["module_set_TB6612MotorDriver"]};
Blockly.Blocks.module_set_TB6612MotorDriver={init:function(){var a=new Blockly.FieldDropdown([["forward","f"],["backward","b"],["stop","s"]],function(a){this.sourceBlock_.updateStepShape(a)});this.appendDummyInput().appendField(new Blockly.FieldInstanceDropdown("TB6612MotorDriver"),"NAME").appendField(" ").appendField(a,"dir");this.appendValueInput("pwm").setCheck("Number");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cInstanceStatement.primary,
Blockly.Colours.cInstanceStatement.secondary,Blockly.Colours.cInstanceStatement.tertiary);this.setTooltip("CHOOSE THE SPEED AND DIRECTION OF MOTOR")},afterCreateBeforRender:function(){this.updateStepShape(this.getFieldValue("dir"))},updateStepShape:function(a){var b=this.getInput("pwm"),c=!b.hide;a="s"==a?!1:!0;c!=a&&(b.setVisible(a),b.hide=!a,a&&(b=b.connection.targetBlock())&&b.render(!1))}};
Blockly.Blocks.instance_RangeFinder={init:function(){this.appendDummyInput().appendField(new Blockly.FieldImage("blockIcon/pingsensor.png",40,40,"*")).appendField(new Blockly.FieldInstanceInput("RangeFinder","RangeFinder","RangeFinder"),"NAME");this.appendValueInput("Pin").setCheck("Pin").appendField("on Pin");this.setInputsInline(!0);this.setColour(Blockly.Colours.cInstanceDefine.primary,Blockly.Colours.cInstanceDefine.secondary,Blockly.Colours.cInstanceDefine.tertiary);this.setTooltip("An ultrasonic transmitter and receiver sensor all in one.")},
provideBlocks:["module_RangeFinder_Ping"]};Blockly.Blocks.module_RangeFinder_Ping={init:function(){this.appendDummyInput().appendField("mm of").appendField(new Blockly.FieldInstanceDropdown("RangeFinder"),"NAME");this.setInputsInline(!0);this.setOutput(!0,"Number");this.setColour(Blockly.Colours.cModuleInput.primary,Blockly.Colours.cModuleInput.secondary,Blockly.Colours.cModuleInput.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);this.setTooltip("READ THE DISTANCE IN MILLIMETERS OF THE ULTRASONIC SENSOR")}};
Blockly.Blocks.instance_OseppRemote={init:function(){this.appendDummyInput().appendField("Remote Update");this.appendDummyInput().appendField(new Blockly.FieldInstanceInput("remote","remote","remote"),"NAME").setVisible(!1);this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cInstanceDefine.primary,Blockly.Colours.cInstanceDefine.secondary,Blockly.Colours.cInstanceDefine.tertiary);this.setTooltip("")},provideBlocks:["module_OseppRemote_Button",
"module_OseppRemote_Channel","module_OseppRemote_isTimeout"]};
Blockly.Blocks.module_OseppRemote_Button={init:function(){this.appendDummyInput().appendField("Remote").appendField(new Blockly.FieldDropdown([["L","1"],["R","2"],["U","4"],["D","8"],["A","16"],["B","32"],["X","64"],["Y","128"]]),"CHANNEL").appendField("Pressed");this.setInputsInline(!0);this.setOutput(!0,"Boolean");this.setColour(Blockly.Colours.cModuleInput.primary,Blockly.Colours.cModuleInput.secondary,Blockly.Colours.cModuleInput.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_HEXAGONAL);this.setTooltip("DETECT IF REMOTE BUTTON IS PRESSED");
this.setHelpUrl("")}};
Blockly.Blocks.module_OseppRemote_Channel={init:function(){this.appendDummyInput().appendField("Remote").appendField(new Blockly.FieldDropdown([["Left X","0"],["Left Y","1"],["Right X","2"],["Right Y","3"],["Gravity X","4"],["Gravity Y","5"],["Gravity Z","6"]]),"CHANNEL");this.setInputsInline(!0);this.setOutput(!0,"Number");this.setColour(Blockly.Colours.cModuleInput.primary,Blockly.Colours.cModuleInput.secondary,Blockly.Colours.cModuleInput.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);this.setTooltip("DETECT IF REMOTE BUTTON IS PRESSED");
this.setHelpUrl("")}};Blockly.Blocks.module_OseppRemote_isTimeout={init:function(){this.appendDummyInput().appendField("Remote Timeout");this.appendValueInput("time").setCheck("Number");this.setInputsInline(!0);this.setOutput(!0,"Boolean");this.setColour(Blockly.Colours.cModuleInput.primary,Blockly.Colours.cModuleInput.secondary,Blockly.Colours.cModuleInput.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_HEXAGONAL);this.setTooltip("DETECT IF REMOTE IS TIMEOUT");this.setHelpUrl("")}};Blockly.Blocks.control={};
Blockly.Blocks.control_if={init:function(){this.appendValueInput("IF0").setCheck(["Boolean","Number"]).appendField("if");this.appendStatementInput("DO0").setCheck(null);this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cLoop.primary,Blockly.Colours.cLoop.secondary,Blockly.Colours.cLoop.tertiary);this.setTooltip("IF A VALUE IS TRUE TO A CONDITION, DO SOMETHING. ELSE IS EXCEPTION");this.setHelpUrl("https://www.arduino.cc/en/Reference/If");this.setMutator(new Blockly.Mutator(["controls_if_elseif",
"controls_if_else"]));this.elseCount_=this.elseifCount_=0},mutationToDom:function(){if(!this.elseifCount_&&!this.elseCount_)return null;var a=document.createElement("mutation");this.elseifCount_&&a.setAttribute("elseif",this.elseifCount_);this.elseCount_&&a.setAttribute("else",1);return a},domToMutation:function(a){a?(this.elseifCount_=parseInt(a.getAttribute("elseif"),10)||0,this.elseCount_=parseInt(a.getAttribute("else"),10)||0):this.elseCount_=this.elseifCount_=0;this.updateShape_()},decompose:function(a){var b=
a.newBlock("controls_if_if");b.initSvg();for(var c=b.nextConnection,e=1;e<=this.elseifCount_;e++){var f=a.newBlock("controls_if_elseif");f.initSvg();c.connect(f.previousConnection);c=f.nextConnection}this.elseCount_&&(a=a.newBlock("controls_if_else"),a.initSvg(),c.connect(a.previousConnection));return b},compose:function(a){var b=a;this.elseCount_=this.elseifCount_=0;a=[];for(var c=[],e=null;b;){switch(b.type){case "controls_if_elseif":this.elseifCount_++;case "controls_if_if":a.push(b.valueConnection_);
c.push(b.statementConnection_);break;case "controls_if_else":this.elseCount_++;e=b.statementConnection_;break;default:throw"Unknown block type.";}b=b.nextConnection&&b.nextConnection.targetBlock()}this.updateShape_();for(b=0;b<=this.elseifCount_;b++)Blockly.Mutator.reconnect(a[b],this,"IF"+b),Blockly.Mutator.reconnect(c[b],this,"DO"+b);Blockly.Mutator.reconnect(e,this,"ELSE")},saveConnections:function(a){for(var b=0;a;){switch(a.type){case "controls_if_if":case "controls_if_elseif":var c=this.getInput("IF"+
b),e=this.getInput("DO"+b);a.valueConnection_=c&&c.connection.targetConnection;a.statementConnection_=e&&e.connection.targetConnection;b++;break;case "controls_if_else":e=this.getInput("ELSE");a.statementConnection_=e&&e.connection.targetConnection;break;default:throw"Unknown block type.";}a=a.nextConnection&&a.nextConnection.targetBlock()}},updateShape_:function(){for(;this.inputList[0];)this.removeInput(this.inputList[0].name);for(var a=0;a<=this.elseifCount_;a++)this.appendValueInput("IF"+a).setCheck(["Boolean",
"Number"]).appendField(0==a?"if":Blockly.Msg.CONTROLS_IF_MSG_ELSEIF),this.appendStatementInput("DO"+a);this.elseCount_&&this.appendStatementInput("ELSE").appendField(Blockly.Msg.CONTROLS_IF_MSG_ELSE)}};
Blockly.Blocks.controls_if_elseif={init:function(){this.setColour(Blockly.Colours.cLoop.primary,Blockly.Colours.cLoop.secondary,Blockly.Colours.cLoop.tertiary);this.appendDummyInput().appendField(Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip(Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP);this.contextMenu=!1}};
Blockly.Blocks.controls_if_else={init:function(){this.setColour(Blockly.Colours.cLoop.primary,Blockly.Colours.cLoop.secondary,Blockly.Colours.cLoop.tertiary);this.appendDummyInput().appendField(Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE);this.setPreviousStatement(!0);this.setTooltip(Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP);this.contextMenu=!1}};
Blockly.Blocks.controls_if_if={init:function(){this.setColour(Blockly.Colours.cLoop.primary,Blockly.Colours.cLoop.secondary,Blockly.Colours.cLoop.tertiary);this.appendDummyInput().appendField(Blockly.Msg.CONTROLS_IF_IF_TITLE_IF);this.setNextStatement(!0);this.setTooltip(Blockly.Msg.CONTROLS_IF_IF_TOOLTIP);this.contextMenu=!1}};
function addShadowNumberToInput(a){var b=a.connection.targetBlock();b?b.render(!1):(b=a.sourceBlock_.workspace.newBlock("math_number"),b.setShadow(!0),b.getField("NUM").setText("1"),b.initSvg(),b.render(!1),a.connection.connect(b.outputConnection))}
Blockly.Blocks.control_forloop={init:function(){this.appendValueInput("init").setCheck(["NumberInstanceDefine","NumberInstance"]).appendField("for(");this.appendValueInput("initNumber").appendField("=").setCheck("Number");this.appendValueInput("CONDITION").setCheck(["Boolean","Number"]).appendField(";");this.appendValueInput("NAME").appendField(";").setCheck("NumberInstance");var a=new Blockly.FieldDropdown([["++","++"],["- -","--"],["+=","+="],["- =","-="],["=","="]],function(a){this.sourceBlock_.updateStepShape(a)});
this.appendDummyInput().appendField(a,"step");this.appendValueInput("stepNumber").setCheck("Number");this.appendDummyInput("ending").appendField(")");this.appendStatementInput("SUBSTACK").setCheck(null);this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cLoop.primary,Blockly.Colours.cLoop.secondary,Blockly.Colours.cLoop.tertiary);this.setTooltip('THE "FOR" STATEMENT IS USED TO REPEAT AN ACTION WITHIN THIS BLOCK IF SET CONDITIONS ARE TRUE.s');
this.setHelpUrl("https://www.arduino.cc/en/Reference/For")},afterCreateBeforRender:function(){this.updateInitShape();this.updateStepShape(this.getFieldValue("step"))},onchange:function(a){if(this.workspace&&a.type!=Blockly.Events.UI&&a.type==Blockly.Events.MOVE&&(a.oldParentId==this.id||a.newParentId==this.id))if("init"==a.newInputName||"init"==a.oldInputName)this.updateInitShape(),this.render(),this.bumpNeighbours_();else if("NAME"==a.newInputName||"NAME"==a.oldInputName)this.updateStepShape(this.getFieldValue("step")),
this.render(),this.bumpNeighbours_()},updateInitShape:function(){var a=this.getInput("init"),b=this.getInput("initNumber"),c=null;if(a=a.connection.targetBlock())this.getInput("initNumber"),c=a.type;"instance_number_getter"!=c&&"instance_array_getter"!=c?(b.setVisible(!1),b.hide=!0):(b.setVisible(!0),b.hide=!1,addShadowNumberToInput(b))},updateStepShape:function(a){var b=this.getInput("NAME"),c=this.getInput("stepNumber"),e=this.getField("step");b.connection.targetBlock()?(e.hide=!1,e.setVisible(!0)):
(e.hide=!0,e.setVisible(!1));0<=a.indexOf("=")&&0==e.hide?!1!==c.hide&&(c.hide=!1,c.setVisible(!0),addShadowNumberToInput(c),(a=c.connection.targetBlock())&&a.render(!1)):!0!==c.hide&&(c.setVisible(!1),c.hide=!0)}};
Blockly.Blocks.control_while={init:function(){this.appendValueInput("CONDITION").setCheck(["Boolean","Number"]).appendField("while");this.appendStatementInput("SUBSTACK").setCheck(null);this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cLoop.primary,Blockly.Colours.cLoop.secondary,Blockly.Colours.cLoop.tertiary);this.setTooltip("WHILE A VALUE IS TRUE, THEN A LOOP OCCURS");this.setHelpUrl("https://www.arduino.cc/en/Reference/While")}};
Blockly.Blocks.control_break={init:function(){this.appendDummyInput().appendField("break");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cLoop.primary,Blockly.Colours.cLoop.secondary,Blockly.Colours.cLoop.tertiary);this.setTooltip("BREAK IS USED TO EXIT FROM LOOPS");this.setHelpUrl("https://www.arduino.cc/en/Reference/Break")}};
Blockly.Blocks.control_delay={init:function(){this.appendValueInput("ms").setCheck("Number").appendField("delay");this.appendDummyInput().appendField("Milliseconds");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cArduinoStatement.primary,Blockly.Colours.cArduinoStatement.secondary,Blockly.Colours.cArduinoStatement.tertiary);this.setTooltip("PAUSE THE PROGRAM FOR THE AMOUNT OF TIME (IN MILLISECONDS)");this.setHelpUrl("https://www.arduino.cc/en/Reference/Delay")}};
Blockly.Blocks.control_delaymicroseconds={init:function(){this.appendValueInput("us").setCheck("Number").appendField("delay");this.appendDummyInput().appendField("Microseconds");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cArduinoStatement.primary,Blockly.Colours.cArduinoStatement.secondary,Blockly.Colours.cArduinoStatement.tertiary);this.setTooltip("PAUSE THE PROGRAM FOR THE AMOUNT OF TIME (1000 Microseconds = 1 sec)");
this.setHelpUrl("https://www.arduino.cc/en/Reference/DelayMicroseconds")}};
Blockly.Blocks.control_millis={init:function(){this.appendDummyInput().appendField("Millis");this.setInputsInline(!0);this.setOutput(!0,"Number");this.setColour(Blockly.Colours.cArduinoInput.secondary,Blockly.Colours.cArduinoInput.secondary,Blockly.Colours.cArduinoInput.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);this.setTooltip("RETURNS THE NUMBER OF MILLISECONDS (1 sec = 1000 milliseconds) SINCE THE ARDUINO BOARD BEGAN RUNNING THE CURRENT PROGRAM");this.setHelpUrl("https://www.arduino.cc/en/Reference/Millis")}};
Blockly.Blocks.control_micros={init:function(){this.appendDummyInput().appendField("Micros");this.setInputsInline(!0);this.setOutput(!0,"Number");this.setColour(Blockly.Colours.cArduinoInput.secondary,Blockly.Colours.cArduinoInput.secondary,Blockly.Colours.cArduinoInput.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);this.setTooltip("RETURNS THE NUMBER OF MICROSECONDS (1 sec = 1,000,000 microseconds) SINCE THE ARDUINO BOARD BEGAN RUNNING THE CURRENT PROGRAM");this.setHelpUrl("https://www.arduino.cc/en/Reference/Micros")}};
Blockly.ScratchBlocks={};Blockly.ScratchBlocks.VerticalExtensions={};Blockly.ScratchBlocks.VerticalExtensions.colourHelper=function(a){var b=Blockly.Colours[a];if(!(b&&b.primary&&b.secondary&&b.tertiary))throw Error('Could not find colours for category "'+a+'"');return function(){this.setColourFromRawValues_(b.primary,b.secondary,b.tertiary)}};Blockly.ScratchBlocks.VerticalExtensions.COLOUR_TEXTFIELD=function(){this.setColourFromRawValues_(Blockly.Colours.textField,Blockly.Colours.textField,Blockly.Colours.textField)};
Blockly.ScratchBlocks.VerticalExtensions.SHAPE_STATEMENT=function(){this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null)};Blockly.ScratchBlocks.VerticalExtensions.SHAPE_HAT=function(){this.setInputsInline(!0);this.setNextStatement(!0,null)};Blockly.ScratchBlocks.VerticalExtensions.SHAPE_END=function(){this.setInputsInline(!0);this.setPreviousStatement(!0,null)};
Blockly.ScratchBlocks.VerticalExtensions.OUTPUT_NUMBER=function(){this.setInputsInline(!0);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);this.setOutput(!0,"Number")};Blockly.ScratchBlocks.VerticalExtensions.OUTPUT_STRING=function(){this.setInputsInline(!0);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);this.setOutput(!0,"String")};Blockly.ScratchBlocks.VerticalExtensions.OUTPUT_BOOLEAN=function(){this.setInputsInline(!0);this.setOutputShape(Blockly.OUTPUT_SHAPE_HEXAGONAL);this.setOutput(!0,"Boolean")};
Blockly.ScratchBlocks.VerticalExtensions.PROCEDURE_DEF_CONTEXTMENU={customContextMenu:function(a){a.push(Blockly.Procedures.makeEditOption(this));for(var b=0,c;c=a[b];b++)if(c.text==Blockly.Msg.DELETE_BLOCK){var e=this.getInput("custom_block");if(e&&e.connection&&e.connection.targetBlock())var f=e.connection.targetBlock().getProcCode();else return;var d=this;c.callback=function(){Blockly.Procedures.deleteProcedureDefCallback(f,d)||alert("To delete a block definition, first remove all uses of the block")}}for(b=
0;c=a[b];b++)if(c.text==Blockly.Msg.DUPLICATE_BLOCK){a.splice(b,1);break}}};Blockly.ScratchBlocks.VerticalExtensions.PROCEDURE_CALL_CONTEXTMENU={customContextMenu:function(a){a.push(Blockly.Procedures.makeEditOption(this))}};Blockly.ScratchBlocks.VerticalExtensions.SCRATCH_EXTENSION=function(){this.isScratchExtension=!0};
Blockly.ScratchBlocks.VerticalExtensions.registerAll=function(){for(var a="control data data_lists sounds motion looks event sensing pen operators more".split(" "),b=0;b<a.length;b++)name=a[b],Blockly.Extensions.register("colours_"+name,Blockly.ScratchBlocks.VerticalExtensions.colourHelper(name));Blockly.Extensions.register("colours_textfield",Blockly.ScratchBlocks.VerticalExtensions.COLOUR_TEXTFIELD);Blockly.Extensions.register("shape_statement",Blockly.ScratchBlocks.VerticalExtensions.SHAPE_STATEMENT);
Blockly.Extensions.register("shape_hat",Blockly.ScratchBlocks.VerticalExtensions.SHAPE_HAT);Blockly.Extensions.register("shape_end",Blockly.ScratchBlocks.VerticalExtensions.SHAPE_END);Blockly.Extensions.register("output_number",Blockly.ScratchBlocks.VerticalExtensions.OUTPUT_NUMBER);Blockly.Extensions.register("output_string",Blockly.ScratchBlocks.VerticalExtensions.OUTPUT_STRING);Blockly.Extensions.register("output_boolean",Blockly.ScratchBlocks.VerticalExtensions.OUTPUT_BOOLEAN);Blockly.Extensions.registerMixin("procedure_def_contextmenu",
Blockly.ScratchBlocks.VerticalExtensions.PROCEDURE_DEF_CONTEXTMENU);Blockly.Extensions.registerMixin("procedure_call_contextmenu",Blockly.ScratchBlocks.VerticalExtensions.PROCEDURE_CALL_CONTEXTMENU);Blockly.Extensions.register("scratch_extension",Blockly.ScratchBlocks.VerticalExtensions.SCRATCH_EXTENSION)};Blockly.ScratchBlocks.VerticalExtensions.registerAll();Blockly.Blocks.data={};Blockly.Constants={};Blockly.Constants.Data={};Blockly.Blocks.data_variable={init:function(){this.jsonInit({message0:"%1",lastDummyAlign0:"CENTRE",args0:[{type:"field_variable_getter",text:"",name:"VARIABLE",variableType:""}],category:Blockly.Categories.data,checkboxInFlyout:!0,extensions:["contextMenu_getVariableBlock","colours_data","output_string"]})}};
Blockly.Blocks.data_setvariableto={init:function(){this.jsonInit({message0:"set %1 to %2",args0:[{type:"field_variable",name:"VARIABLE"},{type:"input_value",name:"VALUE"}],category:Blockly.Categories.data,extensions:["colours_data","shape_statement"]})}};Blockly.Blocks.data_changevariableby={init:function(){this.jsonInit({message0:"change %1 by %2",args0:[{type:"field_variable",name:"VARIABLE"},{type:"input_value",name:"VALUE"}],category:Blockly.Categories.data,extensions:["colours_data","shape_statement"]})}};
Blockly.Blocks.data_showvariable={init:function(){this.jsonInit({message0:"show variable %1",args0:[{type:"field_variable",name:"VARIABLE"}],previousStatement:null,nextStatement:null,category:Blockly.Categories.data,colour:Blockly.Colours.data.primary,colourSecondary:Blockly.Colours.data.secondary,colourTertiary:Blockly.Colours.data.tertiary})}};
Blockly.Blocks.data_hidevariable={init:function(){this.jsonInit({message0:"hide variable %1",args0:[{type:"field_variable",name:"VARIABLE"}],previousStatement:null,nextStatement:null,category:Blockly.Categories.data,colour:Blockly.Colours.data.primary,colourSecondary:Blockly.Colours.data.secondary,colourTertiary:Blockly.Colours.data.tertiary})}};
Blockly.Blocks.data_listcontents={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_variable_getter",text:"",name:"LIST",variableType:Blockly.LIST_VARIABLE_TYPE}],category:Blockly.Categories.dataLists,extensions:["colours_data_lists","output_string"],checkboxInFlyout:!0})}};
Blockly.Blocks.data_listindexall={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_numberdropdown",name:"INDEX",value:"1",min:1,precision:1,options:[["1","1"],["last","last"],["all","all"]]}],category:Blockly.Categories.data,extensions:["colours_textfield","output_string"]})}};
Blockly.Blocks.data_listindexrandom={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_numberdropdown",name:"INDEX",value:"1",min:1,precision:1,options:[["1","1"],["last","last"],["random","random"]]}],category:Blockly.Categories.data,extensions:["colours_textfield","output_string"]})}};
Blockly.Blocks.data_addtolist={init:function(){this.jsonInit({message0:"add %1 to %2",args0:[{type:"input_value",name:"ITEM"},{type:"field_variable",name:"LIST",variableTypes:[Blockly.LIST_VARIABLE_TYPE]}],category:Blockly.Categories.dataLists,extensions:["colours_data_lists","shape_statement"]})}};
Blockly.Blocks.data_deleteoflist={init:function(){this.jsonInit({message0:"delete %1 of %2",args0:[{type:"input_value",name:"INDEX"},{type:"field_variable",name:"LIST",variableTypes:[Blockly.LIST_VARIABLE_TYPE]}],category:Blockly.Categories.dataLists,extensions:["colours_data_lists","shape_statement"]})}};
Blockly.Blocks.data_insertatlist={init:function(){this.jsonInit({message0:"insert %1 at %2 of %3",args0:[{type:"input_value",name:"ITEM"},{type:"input_value",name:"INDEX"},{type:"field_variable",name:"LIST",variableTypes:[Blockly.LIST_VARIABLE_TYPE]}],category:Blockly.Categories.dataLists,extensions:["colours_data_lists","shape_statement"]})}};
Blockly.Blocks.data_replaceitemoflist={init:function(){this.jsonInit({message0:"replace item %1 of %2 with %3",args0:[{type:"input_value",name:"INDEX"},{type:"field_variable",name:"LIST",variableTypes:[Blockly.LIST_VARIABLE_TYPE]},{type:"input_value",name:"ITEM"}],category:Blockly.Categories.dataLists,extensions:["colours_data_lists","shape_statement"]})}};
Blockly.Blocks.data_itemoflist={init:function(){this.jsonInit({message0:"item %1 of %2",args0:[{type:"input_value",name:"INDEX"},{type:"field_variable",name:"LIST",variableTypes:[Blockly.LIST_VARIABLE_TYPE]}],output:null,category:Blockly.Categories.dataLists,extensions:["colours_data_lists"],outputShape:Blockly.OUTPUT_SHAPE_ROUND})}};
Blockly.Blocks.data_lengthoflist={init:function(){this.jsonInit({message0:"length of %1",args0:[{type:"field_variable",name:"LIST",variableTypes:[Blockly.LIST_VARIABLE_TYPE]}],category:Blockly.Categories.dataLists,extensions:["colours_data_lists","output_number"]})}};
Blockly.Blocks.data_listcontainsitem={init:function(){this.jsonInit({message0:"%1 contains %2?",args0:[{type:"field_variable",name:"LIST",variableTypes:[Blockly.LIST_VARIABLE_TYPE]},{type:"input_value",name:"ITEM"}],category:Blockly.Categories.dataLists,extensions:["colours_data_lists","output_boolean"]})}};
Blockly.Blocks.data_showlist={init:function(){this.jsonInit({message0:"show list %1",args0:[{type:"field_variable",name:"LIST",variableTypes:[Blockly.LIST_VARIABLE_TYPE]}],category:Blockly.Categories.dataLists,extensions:["colours_data_lists","shape_statement"]})}};
Blockly.Blocks.data_hidelist={init:function(){this.jsonInit({message0:"hide list %1",args0:[{type:"field_variable",name:"LIST",variableTypes:[Blockly.LIST_VARIABLE_TYPE]}],category:Blockly.Categories.dataLists,extensions:["colours_data_lists","shape_statement"]})}};
Blockly.Constants.Data.CUSTOM_CONTEXT_MENU_GET_VARIABLE_MIXIN={customContextMenu:function(a){if(!this.isCollapsed())if(this.isInFlyout){var b={text:Blockly.Msg.RENAME_VARIABLE,enabled:!0,callback:Blockly.Constants.Data.RENAME_OPTION_CALLBACK_FACTORY(this)},c=this.getField("VARIABLE").text_;c={text:Blockly.Msg.DELETE_VARIABLE.replace("%1",c),enabled:!0,callback:Blockly.Constants.Data.DELETE_OPTION_CALLBACK_FACTORY(this)};a.push(b);a.push(c)}else for(b=this.workspace.getVariablesOfType(""),c=0;c<b.length;c++){var e=
{enabled:!0};e.text=b[c].name;e.callback=Blockly.Constants.Data.VARIABLE_OPTION_CALLBACK_FACTORY(this,e.text);a.push(e)}}};Blockly.Extensions.registerMixin("contextMenu_getVariableBlock",Blockly.Constants.Data.CUSTOM_CONTEXT_MENU_GET_VARIABLE_MIXIN);Blockly.Constants.Data.VARIABLE_OPTION_CALLBACK_FACTORY=function(a,b){return function(){var c=a.getField("VARIABLE");c||console.log("Tried to get a variable field on the wrong type of block.");c.setText(b)}};
Blockly.Constants.Data.RENAME_OPTION_CALLBACK_FACTORY=function(a){return function(){var b=a.workspace,c=a.getField("VARIABLE").getVariable();Blockly.Variables.renameVariable(b,c)}};Blockly.Constants.Data.DELETE_OPTION_CALLBACK_FACTORY=function(a){return function(){var b=a.workspace,c=a.getField("VARIABLE").getVariable();b.deleteVariableById(c.getId())}};Blockly.Blocks.defaultToolbox='<xml id="toolbox-categories" style="display: none"><category name="Motion" colour="#4C97FF" secondaryColour="#3373CC"><block type="motion_movesteps" id="motion_movesteps"><value name="STEPS"><shadow type="math_number"><field name="NUM">10</field></shadow></value></block><block type="motion_turnright" id="motion_turnright"><value name="DEGREES"><shadow type="math_number"><field name="NUM">15</field></shadow></value></block><block type="motion_turnleft" id="motion_turnleft"><value name="DEGREES"><shadow type="math_number"><field name="NUM">15</field></shadow></value></block><block type="motion_pointindirection" id="motion_pointindirection"><value name="DIRECTION"><shadow type="math_angle"><field name="NUM">90</field></shadow></value></block><block type="motion_pointtowards" id="motion_pointtowards"><value name="TOWARDS"><shadow type="motion_pointtowards_menu"></shadow></value></block><block type="motion_gotoxy" id="motion_gotoxy"><value name="X"><shadow id="movex" type="math_number"><field name="NUM">0</field></shadow></value><value name="Y"><shadow id="movey" type="math_number"><field name="NUM">0</field></shadow></value></block><block type="motion_goto" id="motion_goto"><value name="TO"><shadow type="motion_goto_menu"></shadow></value></block><block type="motion_glidesecstoxy" id="motion_glidesecstoxy"><value name="SECS"><shadow type="math_number"><field name="NUM">1</field></shadow></value><value name="X"><shadow id="glidex" type="math_number"><field name="NUM">0</field></shadow></value><value name="Y"><shadow id="glidey" type="math_number"><field name="NUM">0</field></shadow></value></block><block type="motion_glideto" id="motion_glideto"><value name="SECS"><shadow type="math_number"><field name="NUM">1</field></shadow></value><value name="TO"><shadow type="motion_glideto_menu"></shadow></value></block><block type="motion_changexby" id="motion_changexby"><value name="DX"><shadow type="math_number"><field name="NUM">10</field></shadow></value></block><block type="motion_setx" id="motion_setx"><value name="X"><shadow id="setx" type="math_number"><field name="NUM">0</field></shadow></value></block><block type="motion_changeyby" id="motion_changeyby"><value name="DY"><shadow type="math_number"><field name="NUM">10</field></shadow></value></block><block type="motion_sety" id="motion_sety"><value name="Y"><shadow id="sety" type="math_number"><field name="NUM">0</field></shadow></value></block><block type="motion_ifonedgebounce" id="motion_ifonedgebounce"></block><block type="motion_setrotationstyle" id="motion_setrotationstyle"></block><block type="motion_xposition" id="motion_xposition"></block><block type="motion_yposition" id="motion_yposition"></block><block type="motion_direction" id="motion_direction"></block></category><category name="Looks" colour="#9966FF" secondaryColour="#774DCB"><block type="looks_show" id="looks_show"></block><block type="looks_hide" id="looks_hide"></block><block type="looks_switchcostumeto" id="looks_switchcostumeto"><value name="COSTUME"><shadow type="looks_costume"></shadow></value></block><block type="looks_nextcostume" id="looks_nextcostume"></block><block type="looks_nextbackdrop" id="looks_nextbackdrop"></block><block type="looks_switchbackdropto" id="looks_switchbackdropto"><value name="BACKDROP"><shadow type="looks_backdrops"></shadow></value></block><block type="looks_switchbackdroptoandwait" id="looks_switchbackdroptoandwait"><value name="BACKDROP"><shadow type="looks_backdrops"></shadow></value></block><block type="looks_changeeffectby" id="looks_changeeffectby"><value name="CHANGE"><shadow type="math_number"><field name="NUM">10</field></shadow></value></block><block type="looks_seteffectto" id="looks_seteffectto"><value name="VALUE"><shadow type="math_number"><field name="NUM">10</field></shadow></value></block><block type="looks_cleargraphiceffects" id="looks_cleargraphiceffects"></block><block type="looks_changesizeby" id="looks_changesizeby"><value name="CHANGE"><shadow type="math_number"><field name="NUM">10</field></shadow></value></block><block type="looks_setsizeto" id="looks_setsizeto"><value name="SIZE"><shadow type="math_number"><field name="NUM">100</field></shadow></value></block><block type="looks_gotofrontback" id="looks_gotofrontback"></block><block type="looks_goforwardbackwardlayers" id="looks_goforwardbackwardlayers"><value name="NUM"><shadow type="math_integer"><field name="NUM">1</field></shadow></value></block><block type="looks_costumenumbername" id="looks_costumenumbername"></block><block type="looks_backdropnumbername" id="looks_backdropnumbername"></block><block type="looks_size" id="looks_size"></block></category><category name="Sound" colour="#D65CD6" secondaryColour="#BD42BD"><block type="sound_play" id="sound_play"><value name="SOUND_MENU"><shadow type="sound_sounds_menu"></shadow></value></block><block type="sound_playuntildone" id="sound_playuntildone"><value name="SOUND_MENU"><shadow type="sound_sounds_menu"></shadow></value></block><block type="sound_stopallsounds" id="sound_stopallsounds"></block><block type="sound_playdrumforbeats" id="sound_playdrumforbeats"><value name="DRUM"><shadow type="sound_drums_menu"></shadow></value><value name="BEATS"><shadow type="math_number"><field name="NUM">0.25</field></shadow></value></block><block type="sound_restforbeats" id="sound_restforbeats"><value name="BEATS"><shadow type="math_number"><field name="NUM">0.25</field></shadow></value></block><block type="sound_playnoteforbeats" id="sound_playnoteforbeats"><value name="NOTE"><shadow type="math_number"><field name="NUM">60</field></shadow></value><value name="BEATS"><shadow type="math_number"><field name="NUM">0.5</field></shadow></value></block><block type="sound_setinstrumentto" id="sound_setinstrumentto"><value name="INSTRUMENT"><shadow type="sound_instruments_menu"></shadow></value></block><block type="sound_changeeffectby" id="sound_changeeffectby"><value name="VALUE"><shadow type="math_number"><field name="NUM">10</field></shadow></value></block><block type="sound_seteffectto" id="sound_seteffectto"><value name="VALUE"><shadow type="math_number"><field name="NUM">100</field></shadow></value></block><block type="sound_cleareffects" id="sound_cleareffects"></block><block type="sound_changevolumeby" id="sound_changevolumeby"><value name="VOLUME"><shadow type="math_number"><field name="NUM">-10</field></shadow></value></block><block type="sound_setvolumeto" id="sound_setvolumeto"><value name="VOLUME"><shadow type="math_number"><field name="NUM">100</field></shadow></value></block><block type="sound_volume" id="sound_volume"></block><block type="sound_changetempoby" id="sound_changetempoby"><value name="TEMPO"><shadow type="math_number"><field name="NUM">20</field></shadow></value></block><block type="sound_settempotobpm" id="sound_settempotobpm"><value name="TEMPO"><shadow type="math_number"><field name="NUM">60</field></shadow></value></block><block type="sound_tempo" id="sound_tempo"></block></category><category name="Events" colour="#FFD500" secondaryColour="#CC9900"><block type="event_whenflagclicked" id="event_whenflagclicked"></block><block type="event_whenkeypressed" id="event_whenkeypressed"></block><block type="event_whenthisspriteclicked" id="event_whenthisspriteclicked"></block><block type="event_whenbackdropswitchesto" id="event_whenbackdropswitchesto"></block><block type="event_whengreaterthan" id="event_whengreaterthan"><value name="VALUE"><shadow type="math_number"><field name="NUM">10</field></shadow></value></block><block type="event_whenbroadcastreceived" id="event_whenbroadcastreceived"></block><block type="event_broadcast" id="event_broadcast"><value name="BROADCAST_INPUT"><shadow type="event_broadcast_menu"></shadow></value></block><block type="event_broadcastandwait" id="event_broadcastandwait"><value name="BROADCAST_INPUT"><shadow type="event_broadcast_menu"></shadow></value></block></category><category name="Control" colour="#FFAB19" secondaryColour="#CF8B17"><block type="control_wait" id="control_wait"><value name="DURATION"><shadow type="math_positive_number"><field name="NUM">1</field></shadow></value></block><block type="control_repeat" id="control_repeat"><value name="TIMES"><shadow type="math_whole_number"><field name="NUM">10</field></shadow></value></block><block type="control_forever" id="control_forever"></block><block type="control_if" id="control_if"></block><block type="control_if_else" id="control_if_else"></block><block type="control_wait_until" id="control_wait_until"></block><block type="control_repeat_until" id="control_repeat_until"></block><block type="control_stop" id="control_stop"></block><block type="control_start_as_clone" id="control_start_as_clone"></block><block type="control_create_clone_of" id="control_create_clone_of"><value name="CLONE_OPTION"><shadow type="control_create_clone_of_menu"></shadow></value></block><block type="control_delete_this_clone" id="control_delete_this_clone"></block></category><category name="Sensing" colour="#4CBFE6" secondaryColour="#2E8EB8"><block type="sensing_touchingobject" id="sensing_touchingobject"><value name="TOUCHINGOBJECTMENU"><shadow type="sensing_touchingobjectmenu"></shadow></value></block><block type="sensing_touchingcolor" id="sensing_touchingcolor"><value name="COLOR"><shadow type="colour_picker"></shadow></value></block><block type="sensing_coloristouchingcolor" id="sensing_coloristouchingcolor"><value name="COLOR"><shadow type="colour_picker"></shadow></value><value name="COLOR2"><shadow type="colour_picker"></shadow></value></block><block type="sensing_distanceto" id="sensing_distanceto"><value name="DISTANCETOMENU"><shadow type="sensing_distancetomenu"></shadow></value></block><block type="sensing_keypressed" id="sensing_keypressed"><value name="KEY_OPTION"><shadow type="sensing_keyoptions"></shadow></value></block><block type="sensing_mousedown" id="sensing_mousedown"></block><block type="sensing_mousex" id="sensing_mousex"></block><block type="sensing_mousey" id="sensing_mousey"></block><block type="sensing_setdragmode" id="sensing_setdragmode"></block><block type="sensing_loudness" id="sensing_loudness"></block><block type="sensing_timer" id="sensing_timer"></block><block type="sensing_resettimer" id="sensing_resettimer"></block><block type="sensing_of" id="sensing_of"><value name="OBJECT"><shadow type="sensing_of_object_menu"></shadow></value></block><block type="sensing_current" id="sensing_current"></block><block type="sensing_dayssince2000" id="sensing_dayssince2000"></block></category><category name="Pen" colour="#00B295" secondaryColour="#0B8E69"><block type="pen_clear" id="pen_clear"></block><block type="pen_stamp" id="pen_stamp"></block><block type="pen_pendown" id="pen_pendown"></block><block type="pen_penup" id="pen_penup"></block><block type="pen_setpencolortocolor" id="pen_setpencolortocolor"><value name="COLOR"><shadow type="colour_picker"></shadow></value></block><block type="pen_changepencolorby" id="pen_changepencolorby"><value name="COLOR"><shadow type="math_number"><field name="NUM">10</field></shadow></value></block><block type="pen_setpencolortonum" id="pen_setpencolortonum"><value name="COLOR"><shadow type="math_number"><field name="NUM">0</field></shadow></value></block><block type="pen_changepenshadeby" id="pen_changepenshadeby"><value name="SHADE"><shadow type="math_number"><field name="NUM">10</field></shadow></value></block><block type="pen_setpenshadeto" id="pen_setpenshadeto"><value name="SHADE"><shadow type="math_number"><field name="NUM">50</field></shadow></value></block><block type="pen_changepensizeby" id="pen_changepensizeby"><value name="SIZE"><shadow type="math_number"><field name="NUM">1</field></shadow></value></block><block type="pen_setpensizeto" id="pen_setpensizeto"><value name="SIZE"><shadow type="math_number"><field name="NUM">1</field></shadow></value></block><block type="pen_changepentransparencyby" id="pen_changepentransparencyby"><value name="TRANSPARENCY"><shadow type="math_number"><field name="NUM">10</field></shadow></value></block><block type="pen_setpentransparencyto" id="pen_setpentransparencyto"><value name="TRANSPARENCY"><shadow type="math_number"><field name="NUM">50</field></shadow></value></block></category><category name="Operators" colour="#40BF4A" secondaryColour="#389438"><block type="operator_add" id="operator_add"><value name="NUM1"><shadow type="math_number"><field name="NUM"></field></shadow></value><value name="NUM2"><shadow type="math_number"><field name="NUM"></field></shadow></value></block><block type="operator_subtract" id="operator_subtract"><value name="NUM1"><shadow type="math_number"><field name="NUM"></field></shadow></value><value name="NUM2"><shadow type="math_number"><field name="NUM"></field></shadow></value></block><block type="operator_multiply" id="operator_multiply"><value name="NUM1"><shadow type="math_number"><field name="NUM"></field></shadow></value><value name="NUM2"><shadow type="math_number"><field name="NUM"></field></shadow></value></block><block type="operator_divide" id="operator_divide"><value name="NUM1"><shadow type="math_number"><field name="NUM"></field></shadow></value><value name="NUM2"><shadow type="math_number"><field name="NUM"></field></shadow></value></block><block type="operator_random" id="operator_random"><value name="FROM"><shadow type="math_number"><field name="NUM">1</field></shadow></value><value name="TO"><shadow type="math_number"><field name="NUM">10</field></shadow></value></block><block type="operator_lt" id="operator_lt"><value name="OPERAND1"><shadow type="text"><field name="TEXT"></field></shadow></value><value name="OPERAND2"><shadow type="text"><field name="TEXT"></field></shadow></value></block><block type="operator_equals" id="operator_equals"><value name="OPERAND1"><shadow type="text"><field name="TEXT"></field></shadow></value><value name="OPERAND2"><shadow type="text"><field name="TEXT"></field></shadow></value></block><block type="operator_gt" id="operator_gt"><value name="OPERAND1"><shadow type="text"><field name="TEXT"></field></shadow></value><value name="OPERAND2"><shadow type="text"><field name="TEXT"></field></shadow></value></block><block type="operator_and" id="operator_and"></block><block type="operator_or" id="operator_or"></block><block type="operator_not" id="operator_not"></block><block type="operator_join" id="operator_join"><value name="STRING1"><shadow type="text"><field name="TEXT">hello</field></shadow></value><value name="STRING2"><shadow type="text"><field name="TEXT">world</field></shadow></value></block><block type="operator_letter_of" id="operator_letter_of"><value name="LETTER"><shadow type="math_whole_number"><field name="NUM">1</field></shadow></value><value name="STRING"><shadow type="text"><field name="TEXT">world</field></shadow></value></block><block type="operator_length" id="operator_length"><value name="STRING"><shadow type="text"><field name="TEXT">world</field></shadow></value></block><block type="operator_contains" id="operator_contains"><value name="STRING1"><shadow type="text"><field name="TEXT">hello</field></shadow></value><value name="STRING2"><shadow type="text"><field name="TEXT">world</field></shadow></value></block><block type="operator_mod" id="operator_mod"><value name="NUM1"><shadow type="math_number"><field name="NUM"></field></shadow></value><value name="NUM2"><shadow type="math_number"><field name="NUM"></field></shadow></value></block><block type="operator_round" id="operator_round"><value name="NUM"><shadow type="math_number"><field name="NUM"></field></shadow></value></block><block type="operator_mathop" id="operator_mathop"><value name="NUM"><shadow type="math_number"><field name="NUM"></field></shadow></value></block></category><category name="Data" colour="#FF8C1A" secondaryColour="#DB6E00" custom="VARIABLE"></category><category name="More" colour="#FF6680" secondaryColour="#FF4D6A" custom="PROCEDURE"></category><category name="Extensions" colour="#FF6680" secondaryColour="#FF4D6A" iconURI="../media/extensions/wedo2-block-icon.svg"><block type="extension_pen_down" id="extension_pen_down"></block><block type="extension_music_drum" id="extension_music_drum"><value name="NUMBER"><shadow type="math_number"><field name="NUM">1</field></shadow></value></block><block type="extension_wedo_motor" id="extension_wedo_motor"></block><block type="extension_wedo_hat" id="extension_wedo_hat"></block><block type="extension_wedo_boolean" id="extension_wedo_boolean"></block><block type="extension_wedo_tilt_reporter" id="extension_wedo_reporter"><value name="TILT"><shadow type="extension_wedo_tilt_menu"></shadow></value></block><block type="extension_music_reporter" id="extension_music_reporter"></block></category></xml>';Blockly.Blocks.event={};Blockly.Blocks.event_whenflagclicked={init:function(){this.jsonInit({id:"event_whenflagclicked",message0:"when %1 clicked",args0:[{type:"field_image",src:Blockly.mainWorkspace.options.pathToMedia+"green-flag.svg",width:24,height:24,alt:"flag"}],category:Blockly.Categories.event,extensions:["colours_event","shape_hat"]})}};
Blockly.Blocks.event_whenthisspriteclicked={init:function(){this.jsonInit({message0:"when this sprite clicked",category:Blockly.Categories.event,extensions:["colours_event","shape_hat"]})}};Blockly.Blocks.event_whenstageclicked={init:function(){this.jsonInit({message0:"when stage clicked",category:Blockly.Categories.event,extensions:["colours_event","shape_hat"]})}};
Blockly.Blocks.event_whenbroadcastreceived={init:function(){this.jsonInit({id:"event_whenbroadcastreceived",message0:"when I receive %1",args0:[{type:"field_variable",name:"BROADCAST_OPTION",variableTypes:[Blockly.BROADCAST_MESSAGE_VARIABLE_TYPE],variable:Blockly.Msg.DEFAULT_BROADCAST_MESSAGE_NAME}],category:Blockly.Categories.event,extensions:["colours_event","shape_hat"]})}};
Blockly.Blocks.event_whenbackdropswitchesto={init:function(){this.jsonInit({message0:"when backdrop switches to %1",args0:[{type:"field_dropdown",name:"BACKDROP",options:[["backdrop1","BACKDROP1"]]}],category:Blockly.Categories.event,extensions:["colours_event","shape_hat"]})}};
Blockly.Blocks.event_whengreaterthan={init:function(){this.jsonInit({message0:"when %1 > %2",args0:[{type:"field_dropdown",name:"WHENGREATERTHANMENU",options:[["timer","TIMER"]]},{type:"input_value",name:"VALUE"}],category:Blockly.Categories.event,extensions:["colours_event","shape_hat"]})}};
Blockly.Blocks.event_broadcast_menu={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_variable",name:"BROADCAST_OPTION",variableTypes:[Blockly.BROADCAST_MESSAGE_VARIABLE_TYPE],variable:Blockly.Msg.DEFAULT_BROADCAST_MESSAGE_NAME}],colour:Blockly.Colours.event.secondary,colourSecondary:Blockly.Colours.event.secondary,colourTertiary:Blockly.Colours.event.tertiary,extensions:["output_string"]})}};
Blockly.Blocks.event_broadcast={init:function(){this.jsonInit({id:"event_broadcast",message0:"broadcast %1",args0:[{type:"input_value",name:"BROADCAST_INPUT"}],category:Blockly.Categories.event,extensions:["colours_event","shape_statement"]})}};Blockly.Blocks.event_broadcastandwait={init:function(){this.jsonInit({message0:"broadcast %1 and wait",args0:[{type:"input_value",name:"BROADCAST_INPUT"}],category:Blockly.Categories.event,extensions:["colours_event","shape_statement"]})}};
Blockly.Blocks.event_whenkeypressed={init:function(){this.jsonInit({id:"event_whenkeypressed",message0:"when %1 key pressed",args0:[{type:"field_dropdown",name:"KEY_OPTION",options:[["space","space"],["left arrow","left arrow"],["right arrow","right arrow"],["down arrow","down arrow"],["up arrow","up arrow"],["any","any"],["a","a"],["b","b"],["c","c"],["d","d"],["e","e"],["f","f"],["g","g"],["h","h"],["i","i"],["j","j"],["k","k"],["l","l"],["m","m"],["n","n"],["o","o"],["p","p"],["q","q"],["r","r"],
["s","s"],["t","t"],["u","u"],["v","v"],["w","w"],["x","x"],["y","y"],["z","z"],["0","0"],["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"]]}],category:Blockly.Categories.event,extensions:["colours_event","shape_hat"]})}};Blockly.Blocks.extensions={};Blockly.Blocks.extension_pen_down={init:function(){this.jsonInit({message0:"%1 %2 pen down",args0:[{type:"field_image",src:Blockly.mainWorkspace.options.pathToMedia+"extensions/pen-block-icon.svg",width:40,height:40},{type:"field_vertical_separator"}],category:Blockly.Categories.more,extensions:["colours_more","shape_statement","scratch_extension"]})}};
Blockly.Blocks.extension_music_drum={init:function(){this.jsonInit({message0:"%1 %2 play drum %3",args0:[{type:"field_image",src:Blockly.mainWorkspace.options.pathToMedia+"extensions/music-block-icon.svg",width:40,height:40},{type:"field_vertical_separator"},{type:"input_value",name:"NUMBER"}],category:Blockly.Categories.more,extensions:["colours_more","shape_statement","scratch_extension"]})}};
Blockly.Blocks.extension_wedo_motor={init:function(){this.jsonInit({message0:"%1 %2 turn a motor %3",args0:[{type:"field_image",src:Blockly.mainWorkspace.options.pathToMedia+"extensions/wedo2-block-icon.svg",width:40,height:40},{type:"field_vertical_separator"},{type:"field_image",src:Blockly.mainWorkspace.options.pathToMedia+"rotate-right.svg",width:24,height:24}],category:Blockly.Categories.more,extensions:["colours_more","shape_statement","scratch_extension"]})}};
Blockly.Blocks.extension_wedo_hat={init:function(){this.jsonInit({message0:"%1 %2 when I am wearing a hat",args0:[{type:"field_image",src:Blockly.mainWorkspace.options.pathToMedia+"extensions/wedo2-block-icon.svg",width:40,height:40},{type:"field_vertical_separator"}],category:Blockly.Categories.more,extensions:["colours_more","shape_hat","scratch_extension"]})}};
Blockly.Blocks.extension_wedo_boolean={init:function(){this.jsonInit({message0:"%1 %2 O RLY?",args0:[{type:"field_image",src:Blockly.mainWorkspace.options.pathToMedia+"extensions/wedo2-block-icon.svg",width:40,height:40},{type:"field_vertical_separator"}],category:Blockly.Categories.more,extensions:["colours_more","output_boolean","scratch_extension"]})}};
Blockly.Blocks.extension_wedo_tilt_reporter={init:function(){this.jsonInit({message0:"%1 %2 tilt angle %3",args0:[{type:"field_image",src:Blockly.mainWorkspace.options.pathToMedia+"extensions/wedo2-block-icon.svg",width:40,height:40},{type:"field_vertical_separator"},{type:"input_value",name:"TILT"}],category:Blockly.Categories.more,extensions:["colours_more","output_number","scratch_extension"]})}};
Blockly.Blocks.extension_wedo_tilt_menu={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_dropdown",name:"TILT",options:[["Any","Any"],["Whirl","Whirl"],["South","South"],["Back in time","Back in time"]]}],extensions:["colours_more","output_string"]})}};
Blockly.Blocks.extension_music_reporter={init:function(){this.jsonInit({message0:"%1 %2 hey now, you're an all-star",args0:[{type:"field_image",src:Blockly.mainWorkspace.options.pathToMedia+"extensions/music-block-icon.svg",width:40,height:40},{type:"field_vertical_separator"}],category:Blockly.Categories.more,extensions:["colours_more","output_number","scratch_extension"]})}};Blockly.Blocks.ArduinoInputOutput={};Blockly.Blocks.controlsetuploop={init:function(){this.appendDummyInput().setAlign(Blockly.ALIGN_CENTRE).appendField("Arduino Program");this.appendStatementInput("SETUPSTACK").setCheck(null).appendField("Setup");this.appendStatementInput("LOOPSTACK").setCheck(null).appendField("Loop");this.setInputsInline(!0);this.setColour("#006468");this.setTooltip("Arduino program structure,do setup once and do loop foreven");this.setHelpUrl("https://www.arduino.cc/en/Reference/HomePage")}};
Blockly.Blocks.io_readdigitalpin={init:function(){this.appendValueInput("Pin").setCheck("Number").appendField("digitalRead");this.setInputsInline(!0);this.setOutput(!0,"Boolean");this.setColour(Blockly.Colours.cArduinoInput.secondary,Blockly.Colours.cArduinoInput.secondary,Blockly.Colours.cArduinoInput.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_HEXAGONAL);this.setTooltip("READ THE VALUES FROM A SPECIFIC DIGITAL PIN, EITHER HIGH OR LOW");this.setHelpUrl("https://www.arduino.cc/en/Reference/DigitalRead")}};
Blockly.Blocks.io_readanalogpin={init:function(){this.appendValueInput("Pin").setCheck("Number").appendField("analogRead");this.setInputsInline(!0);this.setOutput(!0,"Number");this.setColour(Blockly.Colours.cArduinoInput.secondary,Blockly.Colours.cArduinoInput.secondary,Blockly.Colours.cArduinoInput.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);this.setTooltip("READ THE VALUES(0-1023) FROM SPECIFIED ANALOG PIN");this.setHelpUrl("https://www.arduino.cc/en/Reference/AnalogRead")}};
Blockly.Blocks.io_writedigitalpin={init:function(){this.appendValueInput("Pin").setCheck("Number").appendField("digitalWrite");this.appendValueInput("value").setCheck("Boolean").appendField(" ");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cArduinoStatement.primary,Blockly.Colours.cArduinoStatement.secondary,Blockly.Colours.cArduinoStatement.tertiary);this.setTooltip("WRITE A HIGH OR LOW VALUE TO A DIGITAL PIN");this.setHelpUrl("https://www.arduino.cc/en/Reference/DigitalWrite")}};
Blockly.Blocks.io_writeanalogpin={init:function(){this.appendValueInput("Pin").setCheck("Number").appendField("analogWrite");this.appendValueInput("value").setCheck("Number").appendField(" ");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cArduinoStatement.primary,Blockly.Colours.cArduinoStatement.secondary,Blockly.Colours.cArduinoStatement.tertiary);this.setTooltip("WRITE AS AN ANALOG VALUE(0-255) TO A PIN.");this.setHelpUrl("https://www.arduino.cc/en/Reference/AnalogWrite")}};
Blockly.Blocks.io_pinmode={init:function(){this.appendValueInput("Pin").setCheck("Number").appendField("pinMode");this.appendDummyInput().appendField(" ").appendField(new Blockly.FieldDropdown([["OUTPUT","OUTPUT"],["INPUT","INPUT"],["INPUT_PULLUP","INPUT_PULLUP"]]),"mode");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cArduinoStatement.primary,Blockly.Colours.cArduinoStatement.secondary,Blockly.Colours.cArduinoStatement.tertiary);
this.setTooltip("CONFIGURES THE SPECIFIC PIN TO BEHAVE EITHER AS AN INPUT OR OUTPUT");this.setHelpUrl("https://www.arduino.cc/en/Reference/PinMode")}};
Blockly.Blocks.io_arduino_uno_digitalpin_menu={init:function(){this.appendDummyInput().appendField(new Blockly.FieldDropdown([["0","0"],["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"],["10","10"],["11","11"],["12","12"],["13","13"],["A0","A0"],["A1","A1"],["A2","A2"],["A3","A3"],["A4","A4"],["A5","A5"]]),"Pin");this.setInputsInline(!0);this.setOutput(!0,"Number");this.setColour(Blockly.Colours.cArduinoInput.secondary,Blockly.Colours.cArduinoInput.secondary,
Blockly.Colours.cArduinoInput.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);this.setTooltip("");this.setHelpUrl("")}};
Blockly.Blocks.io_arduino_uno_analogpin_menu={init:function(){this.appendDummyInput().appendField(new Blockly.FieldDropdown([["A0","A0"],["A1","A1"],["A2","A2"],["A3","A3"],["A4","A4"],["A5","A5"],["A6","A6"],["A7","A7"]]),"Pin");this.setInputsInline(!0);this.setOutput(!0,"Number");this.setColour(Blockly.Colours.cArduinoInput.secondary,Blockly.Colours.cArduinoInput.secondary,Blockly.Colours.cArduinoInput.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);this.setTooltip("");this.setHelpUrl("")}};
Blockly.Blocks.io_arduino_uno_pwmpin_menu={init:function(){this.appendDummyInput().appendField(new Blockly.FieldDropdown([["3","3"],["5","5"],["6","6"],["9","9"],["10","10"],["11","11"]]),"Pin");this.setInputsInline(!0);this.setOutput(!0,"Number");this.setColour(Blockly.Colours.cArduinoInput.secondary,Blockly.Colours.cArduinoInput.secondary,Blockly.Colours.cArduinoInput.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);this.setTooltip("");this.setHelpUrl("")}};
Blockly.Blocks.io_pinstate_menu={init:function(){this.appendDummyInput().appendField(new Blockly.FieldDropdown([["HIGH","HIGH"],["LOW","LOW"]]),"state");this.setInputsInline(!0);this.setOutput(!0,"Boolean");this.setColour(Blockly.Colours.cArduinoInput.secondary,Blockly.Colours.cArduinoInput.secondary,Blockly.Colours.cArduinoInput.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_HEXAGONAL);this.setTooltip("");this.setHelpUrl("")}};
Blockly.Blocks.io_tone={init:function(){this.appendValueInput("Pin").setCheck("Number").appendField("tone");this.appendValueInput("frequency").setCheck("Number").appendField(" ");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cArduinoStatement.primary,Blockly.Colours.cArduinoStatement.secondary,Blockly.Colours.cArduinoStatement.tertiary);this.setTooltip("GENERATES A SPECIFIC TONE SOUND");this.setHelpUrl("https://www.arduino.cc/en/Reference/Tone")}};
Blockly.Blocks.io_tone_menu={init:function(){this.appendDummyInput().appendField(new Blockly.FieldDropdown([["NOTE_C3","131"],["NOTE_D3","147"],["NOTE_E3","165"],["NOTE_F3","175"],["NOTE_G3","196"],["NOTE_A3","220"],["NOTE_B3","247"],["NOTE_C4","262"],["NOTE_D4","294"],["NOTE_E4","330"],["NOTE_F4","349"],["NOTE_G4","392"],["NOTE_A4","440"],["NOTE_B4","494"],["NOTE_C5","532"],["NOTE_D5","587"],["NOTE_E5","659"],["NOTE_F5","698"],["NOTE_G5","784"],["NOTE_A5","880"],["NOTE_B5","988"]]),"Tone");this.setInputsInline(!0);
this.setOutput(!0,"Number");this.setColour(Blockly.Colours.cArduinoInput.secondary,Blockly.Colours.cArduinoInput.secondary,Blockly.Colours.cArduinoInput.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);this.setTooltip("");this.setHelpUrl("")}};
Blockly.Blocks.io_notone={init:function(){this.appendValueInput("Pin").setCheck("Number").appendField("noTone");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cArduinoStatement.primary,Blockly.Colours.cArduinoStatement.secondary,Blockly.Colours.cArduinoStatement.tertiary);this.setTooltip("STOPS THE TONE() SOUND");this.setHelpUrl("https://www.arduino.cc/en/Reference/NoTone")}};
Blockly.Blocks.io_pulsein={init:function(){this.appendValueInput("Pin").setCheck("Number").appendField("pulseIn");this.appendValueInput("value").setCheck("Boolean").appendField(" ");this.appendValueInput("timeout").setCheck("Number").appendField("Timeout");this.setInputsInline(!0);this.setOutput(!0,"Number");this.setColour(Blockly.Colours.cArduinoInput.primary,Blockly.Colours.cArduinoInput.secondary,Blockly.Colours.cArduinoInput.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);this.setTooltip("READS A PULSE (EITHER HIGH OR LOW) ON A PIN");
this.setHelpUrl("https://www.arduino.cc/en/Reference/PulseIn")}};
Blockly.Blocks.instance_serial={init:function(){this.appendDummyInput().appendField("Serial.begin(").appendField(new Blockly.FieldDropdown([["1200","1200"],["2400","2400"],["4800","4800"],["9600","9600"],["14400","14400"],["19200","19200"],["28800","28800"],["38400","38400"],["57600","57600"],["115200","115200"],["128000","128000"]]),"Bandrate").appendField(")");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cArduinoStatement.primary,
Blockly.Colours.cArduinoStatement.secondary,Blockly.Colours.cArduinoStatement.tertiary);this.setTooltip("SETS THE DATA RATE IN BITS PER SECOND (BAUD) FOR SERIAL DATA TRANSMISSION");this.setHelpUrl("https://www.arduino.cc/en/Serial/Begin")}};
Blockly.Blocks.serial_print={init:function(){this.appendValueInput("value").setCheck(["String","Number","Boolean"]).appendField("Serial").appendField(new Blockly.FieldDropdown([["print","print"],["println","println"]]),"action");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cArduinoStatement.primary,Blockly.Colours.cArduinoStatement.secondary,Blockly.Colours.cArduinoStatement.tertiary);this.setTooltip("PRINT A VARIABLE TO THE SERIAL PORT");
this.setHelpUrl("https://www.arduino.cc/en/Serial/Print")}};Blockly.Blocks.serial_available={init:function(){this.appendDummyInput().appendField("Serial.available");this.setInputsInline(!0);this.setOutput(!0,"Number");this.setColour(Blockly.Colours.cArduinoInput.primary,Blockly.Colours.cArduinoInput.secondary,Blockly.Colours.cArduinoInput.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);this.setTooltip("GET THE NUMBER OF BYTES (CHARACTERS) AVAILABLE FOR READING FROM THE SERIAL PORT");this.setHelpUrl("https://www.arduino.cc/en/Serial/Available")}};
Blockly.Blocks.serial_read={init:function(){this.appendDummyInput().appendField("Serial.read");this.setInputsInline(!0);this.setOutput(!0,"Number");this.setColour(Blockly.Colours.cArduinoInput.primary,Blockly.Colours.cArduinoInput.secondary,Blockly.Colours.cArduinoInput.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);this.setTooltip("READS INCOMING SERIAL DATA");this.setHelpUrl("https://www.arduino.cc/en/Serial/Read")}};
Blockly.Blocks.defaultPin=function(a,b){var c=[],e=a.workspace;e.isFlyout&&(e=e.targetWorkspace);e=e.getAllBlocks();for(var f=0,d;d=e[f];f++)"io_arduino_uno_pin_usable_menu"===d.type&&(d=d.inputList[0].fieldRow[0].getValue(),c.push(d));e=b.split(":");c=c.concat(Blockly.Flyout.prototype.Pin_perOrder_for_Block);if(e[1]){var g=e[1].split(",");for(d=0;f=g[d];d++)if(0>c.indexOf(f))return f}g="3 5 6 9 10 11".split(" ");e=e[0];if(0<=e.indexOf("pwm"))for(d=0;f=g[d];d++){if(0>c.indexOf(f))return f}else if(0<=
e.indexOf("analog"))for(d=0;7>=d;d++){if(0>c.indexOf("A"+d))return"A"+d}else{for(d=2;13>=d;d++)if(0>c.indexOf(d.toString()))return d.toString();for(d=0;1>=d;d++)if(0>c.indexOf(d.toString()))return d.toString();for(d=0;5>=d;d++)if(0>c.indexOf("A"+d))return"A"+d}return null};
Blockly.Blocks.genMenu=function(){var a=[["select pin","select pin"]],b=[];if(!this||!this.sourceBlock_)return a;var c=this.sourceBlock_.workspace;c.isFlyout&&(c=c.targetWorkspace);c=c.getAllBlocks();for(var e=0,f;f=c[e];e++)"io_arduino_uno_pin_usable_menu"===f.type&&(f=f.inputList[0].fieldRow[0].getValue(),b.push(f));c=[];e="3 5 6 9 10 11".split(" ");f=this.sourceBlock_.data?this.sourceBlock_.data.toLocaleLowerCase():"a";if(0<=f.indexOf("pwm"))for(var d=0;f=e[d];d++)0>b.indexOf(f)&&c.push([f,f]);
else if(0<=f.indexOf("analog"))for(d=0;7>=d;d++)0>b.indexOf("A"+d)&&c.push(["A"+d,"A"+d]);else{for(d=0;13>=d;d++)0>b.indexOf(d.toString())&&c.push([d.toString(),d.toString()]);for(d=0;5>=d;d++)0>b.indexOf("A"+d)&&c.push(["A"+d,"A"+d])}return 0<c.length?c:a};function pinChangeValidator(a,b){this.sourceBlock_.workspace.isFlyout||Blockly.FieldInstanceInput.refWorkspaceToolbox(this.sourceBlock_.workspace)}
Blockly.Blocks.io_arduino_uno_pin_usable_menu={init:function(){this.appendDummyInput().appendField(new Blockly.FieldDropdown(Blockly.Blocks.genMenu,pinChangeValidator),"Pin");this.setInputsInline(!0);this.setOutput(!0,"Pin");this.setTooltip("digital pin set");this.setHelpUrl("");this.setColour(Blockly.Colours.cInstanceDefine.secondary,Blockly.Colours.cInstanceDefine.secondary,Blockly.Colours.cInstanceDefine.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND)},dataHook:function(a){if(this.workspace.isFlyout){a=
this.getField(a);var b=Blockly.Blocks.defaultPin(this,this.data);b&&(a.setValue(b),Blockly.Flyout.prototype.Pin_perOrder_for_Block.push(b))}}};Blockly.Blocks.InstancesNumber={};
Blockly.Blocks.instance_create_number={init:function(){this.appendDummyInput().appendField(new Blockly.FieldDropdown([["int","int"],["long","long"],["unsigned int","unsigned int"],["unsigned long","unsigned long"],["char","char"],["byte","byte"],["float","float"]]),"TYPE");this.appendDummyInput().appendField(" ").appendField(new Blockly.FieldInstanceInput("NumberInstance"),"NAME").appendField("=").appendField(new Blockly.FieldTextInput("0"),"INITVALUE");this.setInputsInline(!0);this.setColour(Blockly.Colours.cVariableDefine.primary,
Blockly.Colours.cVariableDefine.secondary,Blockly.Colours.cVariableDefine.tertiary);this.setOutput(!0,"NumberInstanceDefine");this.setOutputShape(Blockly.OUTPUT_SHAPE_SQUARE);var a=this;this.setTooltip(function(){return{"int":"Integers are your primary data-type for number storage.","long":"Long variables are extended size variables for number storage, and store 32 bits (4 bytes), from -2,147,483,648 to 2,147,483,647.","unsigned int":"only store positive values, yielding a useful range of 0 to 65,535 (2^16) - 1).",
"unsigned long":"Unsigned long variables are extended size variables for number storage, and store 32 bits (4 bytes). Unlike standard longs unsigned longs won't store negative numbers, making their range from 0 to 4,294,967,295 (2^32 - 1).","char":"A data type that takes up 1 byte of memory that stores a character value","byte":"A byte stores an 8-bit unsigned number, from 0 to 255.","float":"Datatype for floating-point numbers, a number that has a decimal point."}[a.getFieldValue("TYPE")]});this.setHelpUrl(function(){return{"int":"https://www.arduino.cc/en/Reference/Int",
"long":"https://www.arduino.cc/en/Reference/Long","unsigned int":"https://www.arduino.cc/en/Reference/UnsignedInt","unsigned long":"https://www.arduino.cc/en/Reference/UnsignedLong","char":"https://www.arduino.cc/en/Reference/Char","byte":"https://www.arduino.cc/en/Reference/Byte","float":"https://www.arduino.cc/en/Reference/Float"}[a.getFieldValue("TYPE")]})}};
Blockly.Blocks.instance_number_getter={init:function(){this.appendDummyInput().setAlign(Blockly.ALIGN_CENTRE).appendField(new Blockly.FieldInstanceGetter("",""),"NAME");this.setInputsInline(!0);this.setOutput(!0,["Number","NumberInstance"]);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);this.setTooltip("retrieve value from variable sign");this.setHelpUrl("https://www.arduino.cc/en/Reference/Scope");this.setColour(Blockly.Colours.cVariableOperation.secondary,Blockly.Colours.cVariableOperation.secondary,
Blockly.Colours.cVariableOperation.tertiary)}};
Blockly.Blocks.instance_set_number={init:function(){var a=new Blockly.FieldDropdown([["=","="],["++","++"],["- -","--"],["+=","+="],["- =","-="],["*=","*="],["/=","/="],["%=","%="]],function(a){this.sourceBlock_.updateShape(a)});this.appendDummyInput().appendField(new Blockly.FieldInstanceDropdown("NumberInstance"),"instance_name").appendField(a,"op");this.appendValueInput("VALUE").setCheck(["Number","Boolean"]);this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,
null);this.setColour(Blockly.Colours.cVariableOperation.primary,Blockly.Colours.cVariableOperation.secondary,Blockly.Colours.cVariableOperation.tertiary);this.setTooltip("Stores the value to the right of the equal sign in the variable to the left of the equal sign");this.setHelpUrl("https://www.arduino.cc/en/Reference/Assignment")},afterCreateBeforRender:function(){var a=this.getFieldValue("op");this.updateShape(a)},updateShape:function(a){var b=this.getInput("VALUE");a&&(0<=a.indexOf("=")?!1!==b.hide&&
(b.hide=!1,b.setVisible(!0),addShadowNumberToInput(b)):!0!==b.hide&&(b.setVisible(!1),b.hide=!0))}};
Blockly.Blocks.instance_create_boolean={init:function(){this.appendDummyInput().appendField("boolean ").appendField(new Blockly.FieldInstanceInput("BooleanInstance"),"NAME").appendField("=").appendField(new Blockly.FieldDropdown([["False","false"],["True","true"]]),"initValue");this.setInputsInline(!0);this.setOutput(!0,"booleanInstanceDefine");this.setOutputShape(Blockly.OUTPUT_SHAPE_SQUARE);this.setColour(Blockly.Colours.cVariableDefine.primary,Blockly.Colours.cVariableDefine.secondary,Blockly.Colours.cVariableDefine.tertiary);
this.setTooltip("A boolean holds one of two values, true or false.");this.setHelpUrl("https://www.arduino.cc/en/Reference/BooleanVariables")}};
Blockly.Blocks.instance_set_boolean={init:function(){this.appendDummyInput().appendField(new Blockly.FieldInstanceDropdown("BooleanInstance"),"instance_name").appendField("=");this.appendValueInput("VALUE").setCheck("Boolean");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cVariableOperation.primary,Blockly.Colours.cVariableOperation.secondary,Blockly.Colours.cVariableOperation.tertiary);this.setTooltip("Stores the value to the right of the equal sign in the variable to the left of the equal sign");
this.setHelpUrl("https://www.arduino.cc/en/Reference/Assignment")}};
Blockly.Blocks.instance_boolean_getter={init:function(){this.appendDummyInput().setAlign(Blockly.ALIGN_CENTRE).appendField(new Blockly.FieldInstanceGetter("",""),"NAME");this.setInputsInline(!0);this.setOutput(!0,["Boolean","BooleanInstance"]);this.setTooltip("retrieve value from variable sign");this.setHelpUrl("https://www.arduino.cc/en/Reference/Scope");this.setColour(Blockly.Colours.cVariableOperation.secondary,Blockly.Colours.cVariableOperation.secondary,Blockly.Colours.cVariableOperation.tertiary);
this.setOutputShape(Blockly.OUTPUT_SHAPE_HEXAGONAL)}};
Blockly.Blocks.instance_create_string={init:function(){this.appendDummyInput().appendField("string ").appendField(new Blockly.FieldInstanceInput("StringInstance","str1","str"),"NAME").appendField("=").appendField(new Blockly.FieldTextInput("hello!"),"initValue");this.setInputsInline(!0);this.setOutput(!0,"StringInstanceDefine");this.setOutputShape(Blockly.OUTPUT_SHAPE_SQUARE);this.setColour(Blockly.Colours.cVariableDefine.primary,Blockly.Colours.cVariableDefine.secondary,Blockly.Colours.cVariableDefine.tertiary);
this.setTooltip("The String class,allows you to use and manipulate strings");this.setHelpUrl("https://www.arduino.cc/en/Reference/StringObject")}};
Blockly.Blocks.instance_set_string={init:function(){this.appendDummyInput().appendField(new Blockly.FieldInstanceDropdown("StringInstance"),"instance_name").appendField("=");this.appendValueInput("VALUE").setCheck("String");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cVariableOperation.primary,Blockly.Colours.cVariableOperation.secondary,Blockly.Colours.cVariableOperation.tertiary);this.setTooltip("Stores the value to the right of the equal sign in the variable to the left of the equal sign");
this.setHelpUrl("https://www.arduino.cc/en/Reference/String")}};
Blockly.Blocks.instance_string_getter={init:function(){this.appendDummyInput().setAlign(Blockly.ALIGN_CENTRE).appendField(new Blockly.FieldInstanceGetter("",""),"NAME");this.setInputsInline(!0);this.setOutput(!0,["String","StringInstance"]);this.setTooltip("retrieve value from variable sign");this.setHelpUrl("https://www.arduino.cc/en/Reference/String");this.setColour(Blockly.Colours.cVariableOperation.secondary,Blockly.Colours.cVariableOperation.secondary,Blockly.Colours.cVariableOperation.tertiary);
this.setOutputShape(Blockly.OUTPUT_SHAPE_SQUARE)}};
Blockly.Blocks.instance_create_array={init:function(){this.appendDummyInput().appendField(new Blockly.FieldDropdown([["int","int"],["long","long"],["unsigned int","unsigned int"],["unsigned long","unsigned long"],["char","char"],["byte","byte"],["float","float"]]),"TYPE");this.appendDummyInput().appendField(" ").appendField(new Blockly.FieldInstanceInput("ArrayInstance","arr","arr"),"NAME").appendField("[").appendField(new Blockly.FieldNumber(10,0),"INITVALUE").appendField("]");this.setInputsInline(!0);
this.setColour(Blockly.Colours.cVariableDefine.primary,Blockly.Colours.cVariableDefine.secondary,Blockly.Colours.cVariableDefine.tertiary);this.setTooltip("An array is a collection of variables that are accessed with an index number");this.setHelpUrl("https://www.arduino.cc/en/Reference/Array");this.initValue=[]},mutationToDom:function(){if(0>=this.initValue.length)return null;var a=document.createElement("mutation");a.setAttribute("initValue",this.initValue.toString());return a},domToMutation:function(a){a?
(this.initValue=a.getAttribute("initValue"),this.initValue||(this.initValue=[])):this.initValue=[];this.updateShape_()},decompose:function(a){var b=a.newBlock("instance_array_array");b.setFieldValue(this.getFieldValue("NAME"),"NAME");b.initSvg();for(var c=b.nextConnection,e=0;e<this.initValue.length;e++){var f=a.newBlock("instance_array_number");f.setFieldValue(this.initValue[e],"initValue");f.initSvg();c.connect(f.previousConnection);c=f.nextConnection}return b},compose:function(a){a=a.nextConnection.targetBlock();
var b=0;for(this.initValue=[];a;)this.initValue[b]=a.getFieldValue("initValue"),b++,a=a.nextConnection&&a.nextConnection.targetBlock();this.updateShape_()},saveConnections:function(a){},updateShape_:function(){}};
Blockly.Blocks.instance_array_number={init:function(){this.setColour(Blockly.Colours.cVariableDefine.primary,Blockly.Colours.cVariableDefine.secondary,Blockly.Colours.cVariableDefine.tertiary);this.appendDummyInput().setAlign(Blockly.ALIGN_CENTRE).appendField(new Blockly.FieldTextInput("0"),"initValue");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("");this.contextMenu=!1}};
Blockly.Blocks.instance_array_array={init:function(){this.setColour(Blockly.Colours.cVariableDefine.primary,Blockly.Colours.cVariableDefine.secondary,Blockly.Colours.cVariableDefine.tertiary);this.appendDummyInput().appendField("arrayName","NAME");this.setNextStatement(!0);this.setTooltip("");this.contextMenu=!1}};
Blockly.Blocks.instance_set_array={init:function(){this.appendDummyInput().appendField(new Blockly.FieldInstanceGetter("",""),"NAME");this.appendValueInput("INDEX").setCheck("Number").appendField("[");this.appendValueInput("VALUE").setCheck("Number").appendField("] =");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour(Blockly.Colours.cVariableOperation.secondary,Blockly.Colours.cVariableOperation.secondary,Blockly.Colours.cVariableOperation.tertiary);
this.setTooltip("assign a value to an array");this.setHelpUrl("https://www.arduino.cc/en/Reference/Array")}};
Blockly.Blocks.instance_array_getter={init:function(){this.appendDummyInput().appendField(new Blockly.FieldInstanceGetter("",""),"NAME").appendField("[");this.appendValueInput("INDEX").setCheck("Number");this.appendDummyInput().appendField("]");this.setInputsInline(!0);this.setOutput(!0,["Number","NumberInstance"]);this.setTooltip("retrieve a value from an array");this.setHelpUrl("https://www.arduino.cc/en/Reference/Array");this.setColour(Blockly.Colours.cVariableOperation.secondary,Blockly.Colours.cVariableOperation.secondary,
Blockly.Colours.cVariableOperation.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND)}};Blockly.Blocks.looks={};Blockly.Blocks.looks_sayforsecs={init:function(){this.jsonInit({message0:"say %1 for %2 seconds",args0:[{type:"input_value",name:"MESSAGE"},{type:"input_value",name:"SECS"}],category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};Blockly.Blocks.looks_say={init:function(){this.jsonInit({message0:"say %1",args0:[{type:"input_value",name:"MESSAGE"}],category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};
Blockly.Blocks.looks_thinkforsecs={init:function(){this.jsonInit({message0:"think %1 for %2 seconds",args0:[{type:"input_value",name:"MESSAGE"},{type:"input_value",name:"SECS"}],category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};Blockly.Blocks.looks_think={init:function(){this.jsonInit({message0:"think %1",args0:[{type:"input_value",name:"MESSAGE"}],category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};
Blockly.Blocks.looks_show={init:function(){this.jsonInit({message0:"show",category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};Blockly.Blocks.looks_hide={init:function(){this.jsonInit({message0:"hide",category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};Blockly.Blocks.looks_effect_menu_options=[["color","COLOR"],["fisheye","FISHEYE"],["whirl","WHIRL"],["pixelate","PIXELATE"],["mosaic","MOSAIC"],["brightness","BRIGHTNESS"],["ghost","GHOST"]];
Blockly.Blocks.looks_changeeffectby={init:function(){this.jsonInit({message0:"change %1 effect by %2",args0:[{type:"field_dropdown",name:"EFFECT",options:Blockly.Blocks.looks_effect_menu_options},{type:"input_value",name:"CHANGE"}],category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};
Blockly.Blocks.looks_seteffectto={init:function(){this.jsonInit({message0:"set %1 effect to %2",args0:[{type:"field_dropdown",name:"EFFECT",options:Blockly.Blocks.looks_effect_menu_options},{type:"input_value",name:"VALUE"}],category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};Blockly.Blocks.looks_cleargraphiceffects={init:function(){this.jsonInit({message0:"clear graphic effects",category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};
Blockly.Blocks.looks_changesizeby={init:function(){this.jsonInit({message0:"change size by %1",args0:[{type:"input_value",name:"CHANGE"}],category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};Blockly.Blocks.looks_setsizeto={init:function(){this.jsonInit({message0:"set size to %1 %",args0:[{type:"input_value",name:"SIZE"}],category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};
Blockly.Blocks.looks_size={init:function(){this.jsonInit({message0:"size",category:Blockly.Categories.looks,checkboxInFlyout:!0,extensions:["colours_looks","output_number"]})}};Blockly.Blocks.looks_costume={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_dropdown",name:"COSTUME",options:[["costume1","COSTUME1"],["costume2","COSTUME2"]]}],colour:Blockly.Colours.looks.secondary,colourSecondary:Blockly.Colours.looks.secondary,colourTertiary:Blockly.Colours.looks.tertiary,extensions:["output_string"]})}};
Blockly.Blocks.looks_switchcostumeto={init:function(){this.jsonInit({message0:"switch costume to %1",args0:[{type:"input_value",name:"COSTUME"}],category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};Blockly.Blocks.looks_nextcostume={init:function(){this.jsonInit({message0:"next costume",category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};
Blockly.Blocks.looks_switchbackdropto={init:function(){this.jsonInit({message0:"switch backdrop to %1",args0:[{type:"input_value",name:"BACKDROP"}],category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};
Blockly.Blocks.looks_backdrops={init:function(){this.jsonInit({id:"looks_backdrops",message0:"%1",args0:[{type:"field_dropdown",name:"BACKDROP",options:[["backdrop1","BACKDROP1"]]}],colour:Blockly.Colours.looks.secondary,colourSecondary:Blockly.Colours.looks.secondary,colourTertiary:Blockly.Colours.looks.tertiary,extensions:["output_string"]})}};
Blockly.Blocks.looks_gotofrontback={init:function(){this.jsonInit({message0:"go to %1",args0:[{type:"field_dropdown",name:"FRONT_BACK",options:[["front","front"],["back","back"]]}],category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};
Blockly.Blocks.looks_goforwardbackwardlayers={init:function(){this.jsonInit({message0:"go %1 %2 layers",args0:[{type:"field_dropdown",name:"FORWARD_BACKWARD",options:[["forward","forward"],["backward","backward"]]},{type:"input_value",name:"NUM"}],category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};
Blockly.Blocks.looks_backdropnumbername={init:function(){this.jsonInit({message0:"backdrop %1",args0:[{type:"field_dropdown",name:"NUMBER_NAME",options:[["number","number"],["name","name"]]}],category:Blockly.Categories.looks,checkboxInFlyout:!0,extensions:["colours_looks","output_number"]})}};
Blockly.Blocks.looks_costumenumbername={init:function(){this.jsonInit({message0:"costume %1",args0:[{type:"field_dropdown",name:"NUMBER_NAME",options:[["number","number"],["name","name"]]}],category:Blockly.Categories.looks,checkboxInFlyout:!0,extensions:["colours_looks","output_number"]})}};
Blockly.Blocks.looks_switchbackdroptoandwait={init:function(){this.jsonInit({message0:"switch backdrop to %1 and wait",args0:[{type:"input_value",name:"BACKDROP"}],category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};Blockly.Blocks.looks_nextbackdrop={init:function(){this.jsonInit({message0:"next backdrop",category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};Blockly.Blocks.motion={};Blockly.Blocks.motion_movesteps={init:function(){this.jsonInit({message0:"move %1 steps",args0:[{type:"input_value",name:"STEPS"}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};
Blockly.Blocks.motion_turnright={init:function(){this.jsonInit({message0:"turn %1 %2 degrees",args0:[{type:"field_image",src:Blockly.mainWorkspace.options.pathToMedia+"rotate-right.svg",width:24,height:24},{type:"input_value",name:"DEGREES"}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};
Blockly.Blocks.motion_turnleft={init:function(){this.jsonInit({message0:"turn %1 %2 degrees",args0:[{type:"field_image",src:Blockly.mainWorkspace.options.pathToMedia+"rotate-left.svg",width:24,height:24},{type:"input_value",name:"DEGREES"}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};
Blockly.Blocks.motion_pointindirection={init:function(){this.jsonInit({message0:"point in direction %1",args0:[{type:"input_value",name:"DIRECTION"}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};
Blockly.Blocks.motion_pointtowards_menu={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_dropdown",name:"TOWARDS",options:[["mouse-pointer","_mouse_"]]}],colour:Blockly.Colours.motion.secondary,colourSecondary:Blockly.Colours.motion.secondary,colourTertiary:Blockly.Colours.motion.tertiary,extensions:["output_string"]})}};
Blockly.Blocks.motion_pointtowards={init:function(){this.jsonInit({message0:"point towards %1",args0:[{type:"input_value",name:"TOWARDS"}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};
Blockly.Blocks.motion_goto_menu={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_dropdown",name:"TO",options:[["mouse-pointer","_mouse_"],["random position","_random_"]]}],colour:Blockly.Colours.motion.secondary,colourSecondary:Blockly.Colours.motion.secondary,colourTertiary:Blockly.Colours.motion.tertiary,extensions:["output_string"]})}};
Blockly.Blocks.motion_gotoxy={init:function(){this.jsonInit({message0:"go to x: %1 y: %2",args0:[{type:"input_value",name:"X"},{type:"input_value",name:"Y"}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};Blockly.Blocks.motion_goto={init:function(){this.jsonInit({message0:"go to %1",args0:[{type:"input_value",name:"TO"}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};
Blockly.Blocks.motion_glidesecstoxy={init:function(){this.jsonInit({message0:"glide %1 secs to x: %2 y: %3",args0:[{type:"input_value",name:"SECS"},{type:"input_value",name:"X"},{type:"input_value",name:"Y"}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};
Blockly.Blocks.motion_glideto_menu={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_dropdown",name:"TO",options:[["mouse-pointer","_mouse_"],["random position","_random_"]]}],colour:Blockly.Colours.motion.secondary,colourSecondary:Blockly.Colours.motion.secondary,colourTertiary:Blockly.Colours.motion.tertiary,extensions:["output_string"]})}};
Blockly.Blocks.motion_glideto={init:function(){this.jsonInit({message0:"glide %1 secs to %2",args0:[{type:"input_value",name:"SECS"},{type:"input_value",name:"TO"}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};Blockly.Blocks.motion_changexby={init:function(){this.jsonInit({message0:"change x by %1",args0:[{type:"input_value",name:"DX"}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};
Blockly.Blocks.motion_setx={init:function(){this.jsonInit({message0:"set x to %1",args0:[{type:"input_value",name:"X"}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};Blockly.Blocks.motion_changeyby={init:function(){this.jsonInit({message0:"change y by %1",args0:[{type:"input_value",name:"DY"}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};
Blockly.Blocks.motion_sety={init:function(){this.jsonInit({message0:"set y to %1",args0:[{type:"input_value",name:"Y"}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};Blockly.Blocks.motion_ifonedgebounce={init:function(){this.jsonInit({message0:"if on edge, bounce",category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};
Blockly.Blocks.motion_setrotationstyle={init:function(){this.jsonInit({message0:"set rotation style %1",args0:[{type:"field_dropdown",name:"STYLE",options:[["left-right","left-right"],["don't rotate","don't rotate"],["all around","all around"]]}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};
Blockly.Blocks.motion_xposition={init:function(){this.jsonInit({message0:"x position",category:Blockly.Categories.motion,checkboxInFlyout:!0,extensions:["colours_motion","output_number"]})}};Blockly.Blocks.motion_yposition={init:function(){this.jsonInit({message0:"y position",category:Blockly.Categories.motion,checkboxInFlyout:!0,extensions:["colours_motion","output_number"]})}};
Blockly.Blocks.motion_direction={init:function(){this.jsonInit({message0:"direction",category:Blockly.Categories.motion,checkboxInFlyout:!0,extensions:["colours_motion","output_number"]})}};
Blockly.Blocks.operators={};
Blockly.Blocks.arithmeticoperators={init:function(){this.appendValueInput("NUM1").setCheck("Number");this.appendDummyInput().appendField(" ").appendField(new Blockly.FieldDropdown([["+","+"],["-","-"],["*","*"],["/","/"],["%","%"]]),"Operators");this.appendValueInput("NUM2").setCheck("Number").appendField(" ");this.setInputsInline(!0);this.setOutput(!0,"Number");this.setColour(Blockly.Colours.cMathOperation.primary,Blockly.Colours.cMathOperation.secondary,Blockly.Colours.cMathOperation.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
var a=this;this.setTooltip(function(){return{"+":"These operators return the sum of the two operands","-":"These operators return the difference of the two operands","*":"These operators return the product of the two operands","/":"These operators return the quotient (respectively) of the two operands","%":"Calculates the remainder when one integer is divided by another."}[a.getFieldValue("Operators")]});this.setHelpUrl(function(){return"%"==a.getFieldValue("Operators")?"https://www.arduino.cc/en/Reference/Modulo":
"https://www.arduino.cc/en/Reference/Arithmetic"})}};
Blockly.Blocks.comparisonoperators={init:function(){this.appendValueInput("NUM1").setCheck(["Boolean","Number"]);this.appendDummyInput().appendField(" ").appendField(new Blockly.FieldDropdown([["==","=="],["!=","!="],["<","<"],[">",">"],["<=","<="],[">=",">="]]),"Operators");this.appendValueInput("NUM2").setCheck(["Boolean","Number"]).appendField(" ");this.setInputsInline(!0);this.setOutput(!0,"Boolean");this.setColour(Blockly.Colours.cMathOperation.primary,Blockly.Colours.cMathOperation.secondary,
Blockly.Colours.cMathOperation.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_HEXAGONAL);var a=this;this.setTooltip(function(){return{"==":"x == y (x is equal to y)?","!=":"x != y (x is not equal to y)?","<":"x <  y (x is less than y)?",">":"x >  y (x is greater than y)?","<=":"x <= y (x is less than or equal to y)?",">=":"x >= y (x is greater than or equal to y)?"}[a.getFieldValue("Operators")]});this.setHelpUrl(function(){return"%"==a.getFieldValue("Operators")?"https://www.arduino.cc/en/Reference/Modulo":
"https://www.arduino.cc/en/Reference/Arithmetic"})}};
Blockly.Blocks.booleanoperators={init:function(){this.appendValueInput("NUM1").setCheck("Boolean");this.appendDummyInput().appendField(" ").appendField(new Blockly.FieldDropdown([["AND","&&"],["OR","||"]]),"Operators");this.appendValueInput("NUM2").setCheck("Boolean").appendField(" ");this.setInputsInline(!0);this.setOutput(!0,"Boolean");this.setColour(Blockly.Colours.cMathOperation.primary,Blockly.Colours.cMathOperation.secondary,Blockly.Colours.cMathOperation.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_HEXAGONAL);
var a=this;this.setTooltip(function(){return{"&&":"True only if both operands are true","||":"True if either operand is true"}[a.getFieldValue("Operators")]});this.setHelpUrl("https://www.arduino.cc/en/Reference/Boolean")}};
Blockly.Blocks.notoperators={init:function(){this.appendValueInput("NUM2").setCheck("Boolean").appendField("NOT");this.setInputsInline(!0);this.setOutput(!0,"Boolean");this.setColour(Blockly.Colours.cMathOperation.primary,Blockly.Colours.cMathOperation.secondary,Blockly.Colours.cMathOperation.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_HEXAGONAL);this.setTooltip("True if the operand is false");this.setHelpUrl("https://www.arduino.cc/en/Reference/Boolean")}};
Blockly.Blocks.mathminmax={init:function(){this.appendDummyInput().appendField(new Blockly.FieldDropdown([["min","min"],["max","max"]]),"OPERATOR");this.appendValueInput("NUM1").setCheck("Number").appendField("of");this.appendValueInput("NUM2").setCheck("Number").appendField("or");this.setInputsInline(!0);this.setOutput(!0,"Number");this.setColour(Blockly.Colours.cMathOperation.primary,Blockly.Colours.cMathOperation.secondary,Blockly.Colours.cMathOperation.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
var a=this;this.setTooltip(function(){return{min:"Calculates the minimum of two numbers",max:"Calculates the maximum of two numbers"}[a.getFieldValue("Operators")]});this.setHelpUrl(function(){return"min"==a.getFieldValue("Operators")?"https://www.arduino.cc/en/Reference/Min":"https://www.arduino.cc/en/Reference/Max"})}};
Blockly.Blocks.mathoperators={init:function(){this.appendDummyInput().appendField(new Blockly.FieldDropdown([["abs","abs"],["sqrt","sqrt"],["sin","sin"],["cos","cos"],["tan","tan"]]),"OPERATOR");this.appendValueInput("NUM").setCheck("Number").appendField("of");this.setInputsInline(!0);this.setOutput(!0,"Number");this.setColour(Blockly.Colours.cMathOperation.primary,Blockly.Colours.cMathOperation.secondary,Blockly.Colours.cMathOperation.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);var a=
this;this.setTooltip(function(){return{abs:"Computes the absolute value of a number",sqrt:"Calculates the square root of a number",sin:"Calculates the sine of an angle (in radians). The result will be between -1 and 1.",cos:"Calculates the cos of an angle (in radians). The result will be between -1 and 1.",tan:"Calculates the tangent of an angle (in radians). The result will be between negative infinity and infinity."}[a.getFieldValue("OPERATOR")]});this.setHelpUrl(function(){return{abs:"https://www.arduino.cc/en/Reference/Abs",
sqrt:"https://www.arduino.cc/en/Reference/Sqrt",sin:"https://www.arduino.cc/en/Reference/Sin",cos:"https://www.arduino.cc/en/Reference/Cos",tan:"https://www.arduino.cc/en/Reference/Tan"}[a.getFieldValue("OPERATOR")]})}};
Blockly.Blocks.mathconstrain={init:function(){this.appendValueInput("X").setCheck("Number").appendField("constrain");this.appendValueInput("A").setCheck("Number").appendField("range");this.appendValueInput("B").setCheck("Number").appendField("to");this.setInputsInline(!0);this.setOutput(!0,"Number");this.setColour(Blockly.Colours.cMathOperation.primary,Blockly.Colours.cMathOperation.secondary,Blockly.Colours.cMathOperation.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);this.setTooltip("Constrains a number to be within a range");
this.setHelpUrl("https://www.arduino.cc/en/Reference/Constrain")}};
Blockly.Blocks.mathmap={init:function(){this.appendValueInput("X").setCheck("Number").appendField("map");this.appendValueInput("FL").setCheck("Number").appendField("from");this.appendValueInput("FH").setCheck(null).appendField(",");this.appendValueInput("TL").setCheck("Number").appendField("to");this.appendValueInput("TH").setCheck("Number").appendField(",");this.setInputsInline(!0);this.setOutput(!0,"Number");this.setColour(Blockly.Colours.cMathOperation.primary,Blockly.Colours.cMathOperation.secondary,
Blockly.Colours.cMathOperation.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);this.setTooltip("Re-maps a number from one range to another");this.setHelpUrl("https://www.arduino.cc/en/Reference/Map")}};
Blockly.Blocks.mathrandom={init:function(){this.appendValueInput("L").setCheck("Number").appendField("random from");this.appendValueInput("H").setCheck("Number").appendField("to");this.setInputsInline(!0);this.setOutput(!0,"Number");this.setColour(Blockly.Colours.cMathOperation.primary,Blockly.Colours.cMathOperation.secondary,Blockly.Colours.cMathOperation.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);this.setTooltip("generates pseudo-random numbers");this.setHelpUrl("https://www.arduino.cc/en/Reference/Random")}};
Blockly.Blocks.math_boolean_menu={init:function(){this.appendDummyInput().appendField(new Blockly.FieldDropdown([["True","true"],["False","false"]]),"state");this.setInputsInline(!0);this.setOutput(!0,"Boolean");this.setColour(Blockly.Colours.cMathOperation.secondary,Blockly.Colours.cMathOperation.secondary,Blockly.Colours.cMathOperation.tertiary);this.setOutputShape(Blockly.OUTPUT_SHAPE_HEXAGONAL);this.setTooltip("");this.setHelpUrl("")}};Blockly.Blocks.pen={};Blockly.Blocks.pen_clear={init:function(){this.jsonInit({message0:"clear",category:Blockly.Categories.pen,extensions:["colours_pen","shape_statement"]})}};Blockly.Blocks.pen_stamp={init:function(){this.jsonInit({message0:"stamp",category:Blockly.Categories.pen,extensions:["colours_pen","shape_statement"]})}};Blockly.Blocks.pen_pendown={init:function(){this.jsonInit({message0:"pen down",category:Blockly.Categories.pen,extensions:["colours_pen","shape_statement"]})}};
Blockly.Blocks.pen_penup={init:function(){this.jsonInit({message0:"pen up",category:Blockly.Categories.pen,extensions:["colours_pen","shape_statement"]})}};Blockly.Blocks.pen_setpencolortocolor={init:function(){this.jsonInit({message0:"set pen color to %1",args0:[{type:"input_value",name:"COLOR"}],category:Blockly.Categories.pen,extensions:["colours_pen","shape_statement"]})}};
Blockly.Blocks.pen_changepencolorby={init:function(){this.jsonInit({message0:"change pen color by %1",args0:[{type:"input_value",name:"COLOR"}],category:Blockly.Categories.pen,extensions:["colours_pen","shape_statement"]})}};Blockly.Blocks.pen_setpencolortonum={init:function(){this.jsonInit({message0:"set pen color to %1",args0:[{type:"input_value",name:"COLOR"}],category:Blockly.Categories.pen,extensions:["colours_pen","shape_statement"]})}};
Blockly.Blocks.pen_changepenshadeby={init:function(){this.jsonInit({message0:"change pen shade by %1",args0:[{type:"input_value",name:"SHADE"}],category:Blockly.Categories.pen,extensions:["colours_pen","shape_statement"]})}};Blockly.Blocks.pen_setpenshadeto={init:function(){this.jsonInit({message0:"set pen shade to %1",args0:[{type:"input_value",name:"SHADE"}],category:Blockly.Categories.pen,extensions:["colours_pen","shape_statement"]})}};
Blockly.Blocks.pen_changepensizeby={init:function(){this.jsonInit({message0:"change pen size by %1",args0:[{type:"input_value",name:"SIZE"}],category:Blockly.Categories.pen,extensions:["colours_pen","shape_statement"]})}};Blockly.Blocks.pen_setpensizeto={init:function(){this.jsonInit({message0:"set pen size to %1",args0:[{type:"input_value",name:"SIZE"}],category:Blockly.Categories.pen,extensions:["colours_pen","shape_statement"]})}};
Blockly.Blocks.pen_changepentransparencyby={init:function(){this.jsonInit({message0:"change pen transparency by %1",args0:[{type:"input_value",name:"TRANSPARENCY"}],category:Blockly.Categories.pen,extensions:["colours_pen","shape_statement"]})}};Blockly.Blocks.pen_setpentransparencyto={init:function(){this.jsonInit({message0:"set pen transparency to %1",args0:[{type:"input_value",name:"TRANSPARENCY"}],category:Blockly.Categories.pen,extensions:["colours_pen","shape_statement"]})}};Blockly.Blocks.procedures={};Blockly.Blocks.instance_procedure={init:function(){this.appendDummyInput().appendField("void ").appendField(new Blockly.FieldInstanceInput("ProcedureInstance","","procedure"),"NAME");this.appendStatementInput("statement").setCheck(null);this.setInputsInline(!0);this.setColour("#1f9999","#2a8c8c","#287373");this.setTooltip("PROCEDURE IS A SEQUENCE OF PROGRAM INSTRUCTIONS THAT PERFORM A SPECIFIC TASK");this.setHelpUrl("https://en.wikipedia.org/wiki/Subroutine")}};
Blockly.Blocks.instance_procedure_call={init:function(){this.appendDummyInput().appendField("call ").appendField(new Blockly.FieldInstanceGetter("",""),"NAME");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour("#2a8c8c","#2a8c8c","#287373");this.setTooltip("Execute a sequence of instructions");this.setHelpUrl("https://en.wikipedia.org/wiki/Subroutine")}};
Blockly.Blocks.procedure_return={init:function(){this.appendDummyInput().appendField("return");this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null);this.setColour("#2a8c8c","#2a8c8c","#287373");this.setTooltip("Terminate a function and return");this.setHelpUrl("https://www.arduino.cc/en/Reference/Return")}};Blockly.Blocks.sensing={};Blockly.Blocks.sensing_touchingobject={init:function(){this.jsonInit({message0:"touching %1?",args0:[{type:"input_value",name:"TOUCHINGOBJECTMENU"}],category:Blockly.Categories.sensing,extensions:["colours_sensing","output_boolean"]})}};Blockly.Blocks.sensing_touchingobjectmenu={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_dropdown",name:"TOUCHINGOBJECTMENU",options:[["mouse-pointer","_mouse_"],["edge","_edge_"]]}],extensions:["colours_sensing","output_string"]})}};
Blockly.Blocks.sensing_touchingcolor={init:function(){this.jsonInit({message0:"touching color %1?",args0:[{type:"input_value",name:"COLOR"}],category:Blockly.Categories.sensing,extensions:["colours_sensing","output_boolean"]})}};Blockly.Blocks.sensing_coloristouchingcolor={init:function(){this.jsonInit({message0:"color %1 is touching %2?",args0:[{type:"input_value",name:"COLOR"},{type:"input_value",name:"COLOR2"}],category:Blockly.Categories.sensing,extensions:["colours_sensing","output_boolean"]})}};
Blockly.Blocks.sensing_distanceto={init:function(){this.jsonInit({message0:"distance to %1",args0:[{type:"input_value",name:"DISTANCETOMENU"}],category:Blockly.Categories.sensing,extensions:["colours_sensing","output_number"]})}};Blockly.Blocks.sensing_distancetomenu={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_dropdown",name:"DISTANCETOMENU",options:[["mouse-pointer","_mouse_"]]}],extensions:["colours_sensing","output_string"]})}};
Blockly.Blocks.sensing_askandwait={init:function(){this.jsonInit({message0:"ask %1 and wait",args0:[{type:"input_value",name:"QUESTION"}],category:Blockly.Categories.sensing,extensions:["colours_sensing","shape_statement"]})}};Blockly.Blocks.sensing_answer={init:function(){this.jsonInit({message0:"answer",category:Blockly.Categories.sensing,checkboxInFlyout:!0,extensions:["colours_sensing","output_number"]})}};
Blockly.Blocks.sensing_keypressed={init:function(){this.jsonInit({message0:"key %1 pressed?",args0:[{type:"input_value",name:"KEY_OPTION"}],category:Blockly.Categories.sensing,extensions:["colours_sensing","output_boolean"]})}};
Blockly.Blocks.sensing_keyoptions={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_dropdown",name:"KEY_OPTION",options:[["space","space"],["left arrow","left arrow"],["right arrow","right arrow"],["down arrow","down arrow"],["up arrow","up arrow"],["any","any"],["a","a"],["b","b"],["c","c"],["d","d"],["e","e"],["f","f"],["g","g"],["h","h"],["i","i"],["j","j"],["k","k"],["l","l"],["m","m"],["n","n"],["o","o"],["p","p"],["q","q"],["r","r"],["s","s"],["t","t"],["u","u"],["v","v"],["w",
"w"],["x","x"],["y","y"],["z","z"],["0","0"],["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"]]}],extensions:["colours_sensing","output_string"]})}};Blockly.Blocks.sensing_mousedown={init:function(){this.jsonInit({message0:"mouse down?",category:Blockly.Categories.sensing,extensions:["colours_sensing","output_boolean"]})}};
Blockly.Blocks.sensing_mousex={init:function(){this.jsonInit({message0:"mouse x",category:Blockly.Categories.sensing,extensions:["colours_sensing","output_number"]})}};Blockly.Blocks.sensing_mousey={init:function(){this.jsonInit({message0:"mouse y",category:Blockly.Categories.sensing,extensions:["colours_sensing","output_number"]})}};
Blockly.Blocks.sensing_setdragmode={init:function(){this.jsonInit({message0:"set drag mode %1",args0:[{type:"field_dropdown",name:"DRAG_MODE",options:[["draggable","draggable"],["not draggable","not draggable"]]}],category:Blockly.Categories.sensing,extensions:["colours_sensing","shape_statement"]})}};Blockly.Blocks.sensing_loudness={init:function(){this.jsonInit({message0:"loudness",category:Blockly.Categories.sensing,checkboxInFlyout:!0,extensions:["colours_sensing","output_number"]})}};
Blockly.Blocks.sensing_videoon={init:function(){this.jsonInit({message0:"video %1 on %2",args0:[{type:"input_value",name:"VIDEOONMENU1"},{type:"input_value",name:"VIDEOONMENU2"}],category:Blockly.Categories.sensing,checkboxInFlyout:!0,extensions:["colours_sensing","output_number"]})}};
Blockly.Blocks.sensing_videoonmenuone={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_dropdown",name:"VIDEOONMENU1",options:[["motion","MOTION"],["direction","DIRECTION"]]}],extensions:["colours_sensing","output_string"]})}};Blockly.Blocks.sensing_videoonmenutwo={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_dropdown",name:"VIDEOONMENU2",options:[["stage","STAGE"]]}],extensions:["colours_sensing","output_string"]})}};
Blockly.Blocks.sensing_videotoggle={init:function(){this.jsonInit({message0:"turn video %1",args0:[{type:"input_value",name:"VIDEOTOGGLEMENU"}],category:Blockly.Categories.sensing,extensions:["colours_sensing","shape_statement"]})}};Blockly.Blocks.sensing_videotogglemenu={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_dropdown",name:"VIDEOTOGGLEMENU",options:[["on","ON"],["off","OFF"],["on-flipped","ONFLIPPED"]]}],extensions:["colours_sensing","output_string"]})}};
Blockly.Blocks.sensing_setvideotransparency={init:function(){this.jsonInit({message0:"set video transparency to %1%",args0:[{type:"input_value",name:"TRANSPARENCY"}],category:Blockly.Categories.sensing,extensions:["colours_sensing","shape_statement"]})}};Blockly.Blocks.sensing_timer={init:function(){this.jsonInit({message0:"timer",category:Blockly.Categories.sensing,checkboxInFlyout:!0,extensions:["colours_sensing","output_number"]})}};
Blockly.Blocks.sensing_resettimer={init:function(){this.jsonInit({message0:"reset timer",category:Blockly.Categories.sensing,extensions:["colours_sensing","shape_statement"]})}};Blockly.Blocks.sensing_of_object_menu={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_dropdown",name:"OBJECT",options:[["Sprite1","Sprite1"],["Stage","_stage_"]]}],extensions:["colours_sensing","output_string"]})}};
Blockly.Blocks.sensing_of={init:function(){this.jsonInit({message0:"%1 of %2",args0:[{type:"field_dropdown",name:"PROPERTY",options:[["x position","x position"],["y position","y position"],["direction","direction"],["costume #","costume #"],["costume name","costume name"],["size","size"],["volume","volume"],["backdrop #","backdrop #"],["backdrop name","backdrop name"]]},{type:"input_value",name:"OBJECT"}],output:!0,category:Blockly.Categories.sensing,outputShape:Blockly.OUTPUT_SHAPE_ROUND,extensions:["colours_sensing"]})}};
Blockly.Blocks.sensing_current={init:function(){this.jsonInit({message0:"current %1",args0:[{type:"field_dropdown",name:"CURRENTMENU",options:[["year","YEAR"],["month","MONTH"],["date","DATE"],["day of week","DAYOFWEEK"],["hour","HOUR"],["minute","MINUTE"],["second","SECOND"]]}],category:Blockly.Categories.sensing,checkboxInFlyout:!0,extensions:["colours_sensing","output_number"]})}};
Blockly.Blocks.sensing_dayssince2000={init:function(){this.jsonInit({message0:"days since 2000",category:Blockly.Categories.sensing,extensions:["colours_sensing","output_number"]})}};Blockly.Blocks.sensing_username={init:function(){this.jsonInit({message0:"username",category:Blockly.Categories.sensing,checkboxInFlyout:!0,extensions:["colours_sensing","output_number"]})}};Blockly.Blocks.sound={};Blockly.Blocks.sound_sounds_menu={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_dropdown",name:"SOUND_MENU",options:[["1","0"],["2","1"],["3","2"],["4","3"],["5","4"],["6","5"],["7","6"],["8","7"],["9","8"],["10","9"]]}],colour:Blockly.Colours.sounds.secondary,colourSecondary:Blockly.Colours.sounds.secondary,colourTertiary:Blockly.Colours.sounds.tertiary,extensions:["output_string"]})}};
Blockly.Blocks.sound_play={init:function(){this.jsonInit({message0:"start sound %1",args0:[{type:"input_value",name:"SOUND_MENU"}],category:Blockly.Categories.sound,extensions:["colours_sounds","shape_statement"]})}};Blockly.Blocks.sound_playuntildone={init:function(){this.jsonInit({message0:"play sound %1 until done",args0:[{type:"input_value",name:"SOUND_MENU"}],extensions:["colours_sounds","shape_statement"]})}};
Blockly.Blocks.sound_stopallsounds={init:function(){this.jsonInit({message0:"stop all sounds",category:Blockly.Categories.sound,extensions:["colours_sounds","shape_statement"]})}};
Blockly.Blocks.sound_drums_menu={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_dropdown",name:"DRUM",options:[["(1) Snare Drum","1"],["(2) Bass Drum","2"],["(3) Side Stick","3"],["(4) Crash Cymbal","4"],["(5) Open Hi-Hat","5"],["(6) Closed Hi-Hat","6"],["(7) Tambourine","7"],["(8) Hand Clap","8"],["(9) Claves","9"],["(10) Wood Block","10"],["(11) Cowbell","11"],["(12) Triangle","12"],["(13) Bongo","13"],["(14) Conga","14"],["(15) Cabasa","15"],["(16) Guiro","16"],["(17) Vibraslap",
"17"],["(18) Open Cuica","18"]]}],colour:Blockly.Colours.sounds.secondary,colourSecondary:Blockly.Colours.sounds.secondary,colourTertiary:Blockly.Colours.sounds.tertiary,extensions:["output_string"]})}};Blockly.Blocks.sound_playdrumforbeats={init:function(){this.jsonInit({message0:"play drum %1 for %2 beats",args0:[{type:"input_value",name:"DRUM"},{type:"input_value",name:"BEATS"}],category:Blockly.Categories.sound,extensions:["colours_sounds","shape_statement"]})}};
Blockly.Blocks.sound_restforbeats={init:function(){this.jsonInit({message0:"rest for %1 beats",args0:[{type:"input_value",name:"BEATS"}],category:Blockly.Categories.sound,extensions:["colours_sounds","shape_statement"]})}};Blockly.Blocks.sound_playnoteforbeats={init:function(){this.jsonInit({message0:"play note %1 for %2 beats",args0:[{type:"input_value",name:"NOTE"},{type:"input_value",name:"BEATS"}],category:Blockly.Categories.sound,extensions:["colours_sounds","shape_statement"]})}};
Blockly.Blocks.sound_effects_menu_options=[["pitch","PITCH"],["pan left/right","PAN"]];Blockly.Blocks.sound_seteffectto={init:function(){this.jsonInit({message0:"set %1 effect to %2",args0:[{type:"field_dropdown",name:"EFFECT",options:Blockly.Blocks.sound_effects_menu_options},{type:"input_value",name:"VALUE"}],extensions:["colours_sounds","shape_statement"]})}};
Blockly.Blocks.sound_changeeffectby={init:function(){this.jsonInit({message0:"change %1 effect by %2",args0:[{type:"field_dropdown",name:"EFFECT",options:Blockly.Blocks.sound_effects_menu_options},{type:"input_value",name:"VALUE"}],extensions:["colours_sounds","shape_statement"]})}};Blockly.Blocks.sound_cleareffects={init:function(){this.jsonInit({message0:"clear sound effects",extensions:["colours_sounds","shape_statement"]})}};
Blockly.Blocks.sound_instruments_menu={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_dropdown",name:"INSTRUMENT",options:[["(1) Piano","1"],["(2) Electric Piano","2"],["(3) Organ","3"],["(4) Guitar","4"],["(5) Electric Guitar","5"],["(6) Bass","6"],["(7) Pizzicato","7"],["(8) Cello","8"],["(9) Trombone","9"],["(10) Clarinet","10"],["(11) Saxophone","11"],["(12) Flute","12"],["(13) Wooden Flute","13"],["(14) Bassoon","14"],["(15) Choir","15"],["(16) Vibraphone","16"],["(17) Music Box",
"17"],["(18) Steel Drum","18"],["(19) Marimba","19"],["(20) Synth Lead","20"],["(21) Synth Pad","21"]]}],colour:Blockly.Colours.sounds.secondary,colourSecondary:Blockly.Colours.sounds.secondary,colourTertiary:Blockly.Colours.sounds.tertiary,extensions:["output_string"]})}};Blockly.Blocks.sound_setinstrumentto={init:function(){this.jsonInit({message0:"set instrument to %1",args0:[{type:"input_value",name:"INSTRUMENT"}],category:Blockly.Categories.sound,extensions:["colours_sounds","shape_statement"]})}};
Blockly.Blocks.sound_changevolumeby={init:function(){this.jsonInit({message0:"change volume by %1",args0:[{type:"input_value",name:"VOLUME"}],category:Blockly.Categories.sound,extensions:["colours_sounds","shape_statement"]})}};Blockly.Blocks.sound_setvolumeto={init:function(){this.jsonInit({message0:"set volume to %1%",args0:[{type:"input_value",name:"VOLUME"}],category:Blockly.Categories.sound,extensions:["colours_sounds","shape_statement"]})}};
Blockly.Blocks.sound_volume={init:function(){this.jsonInit({message0:"volume",category:Blockly.Categories.sound,checkboxInFlyout:!0,extensions:["colours_sounds","output_number"]})}};Blockly.Blocks.sound_changetempoby={init:function(){this.jsonInit({message0:"change tempo by %1",args0:[{type:"input_value",name:"TEMPO"}],category:Blockly.Categories.sound,extensions:["colours_sounds","shape_statement"]})}};
Blockly.Blocks.sound_settempotobpm={init:function(){this.jsonInit({message0:"set tempo to %1 bpm",args0:[{type:"input_value",name:"TEMPO"}],category:Blockly.Categories.sound,extensions:["colours_sounds","shape_statement"]})}};Blockly.Blocks.sound_tempo={init:function(){this.jsonInit({message0:"tempo",category:Blockly.Categories.sound,checkboxInFlyout:!0,extensions:["colours_sounds","output_number"]})}};